{
  "abi": [
    {
      "inputs": [],
      "name": "AmountOfValidatorDetailsExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "existingKey",
          "type": "bytes"
        }
      ],
      "name": "CannotAddDuplicatePubKey",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotUseDisabledOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidArrayLengthOfZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPubKeyLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPubKeySetupCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        }
      ],
      "name": "MissingActiveValidatorDetails",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        }
      ],
      "name": "MissingPendingValidatorDetails",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "foundPubKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "providedPubKey",
          "type": "bytes"
        }
      ],
      "name": "NextOperatorPubKeyMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "NoOperatorFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        }
      ],
      "name": "NoPubKeyFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OperatorAlreadyDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OperatorAlreadyEnabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OperatorOutOfPendingKeys",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "pubKeys",
          "type": "bytes[]"
        }
      ],
      "name": "ActivePubKeysDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operatorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAddress",
          "type": "address"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
          "name": "pubKeys",
          "type": "tuple[]"
        }
      ],
      "name": "OperatorAddedValidatorDetails",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "pubKeys",
          "type": "bytes[]"
        }
      ],
      "name": "PendingPubKeysDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "pubKeys",
          "type": "bytes[]"
        }
      ],
      "name": "PubKeysUsedForValidatorSetup",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AccessControlManager",
      "outputs": [
        {
          "internalType": "contract IAccessControlManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
          "name": "_validatorDetails",
          "type": "tuple[]"
        }
      ],
      "name": "addNewValidatorDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardAddress",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_pubKeys",
          "type": "bytes[]"
        }
      ],
      "name": "deleteActiveValidators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_pubKeys",
          "type": "bytes[]"
        }
      ],
      "name": "deletePendingValidators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "disableOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "enableOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numNewValidators",
          "type": "uint256"
        }
      ],
      "name": "getNextValidatorDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "foundValidators",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "getOperator",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "rewardAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "controllingAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint128",
              "name": "activeValidators",
              "type": "uint128"
            }
          ],
          "internalType": "struct INodeOperatorRegistry.Operator",
          "name": "operator",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "totalValidatorDetails",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "operatorId",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "getOperatorIdForAddress",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "_operatorId",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        }
      ],
      "name": "getOperatorIdForPubKey",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "getOperatorsActiveValidatorDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
          "name": "validatorDetails",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "getOperatorsPendingValidatorDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "getPoRAddressList",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoRAddressListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_operatorId",
          "type": "uint128"
        }
      ],
      "name": "getRewardDetailsForOperatorId",
      "outputs": [
        {
          "internalType": "address",
          "name": "rewardAddress",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "activeValidators",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOperators",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPendingValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOperatorAddress",
          "type": "address"
        }
      ],
      "name": "updateOperatorControllingAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "updateOperatorName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newRewardAddress",
          "type": "address"
        }
      ],
      "name": "updateOperatorRewardAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_pubKeys",
          "type": "bytes[]"
        }
      ],
      "name": "usePubKeysForValidatorSetup",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
          "name": "validatorDetails",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "AccessControlManager()": "902340a1",
    "addNewValidatorDetails((bytes,bytes)[])": "60ec5216",
    "addOperator(string,address,address)": "54741d6d",
    "deleteActiveValidators(bytes[])": "eda74e71",
    "deletePendingValidators(bytes[])": "242eba0e",
    "disableOperator(address)": "f56408ed",
    "enableOperator(address)": "dd307b99",
    "getNextValidatorDetails(uint256)": "023e8ecb",
    "getOperator(address)": "5865c60c",
    "getOperatorIdForAddress(address)": "f75f35b9",
    "getOperatorIdForPubKey(bytes)": "02f56f04",
    "getOperatorsActiveValidatorDetails(address)": "7ea790ee",
    "getOperatorsPendingValidatorDetails(address)": "422544d2",
    "getPoRAddressList(uint256,uint256)": "f3d4902a",
    "getPoRAddressListLength()": "4f20b888",
    "getRewardDetailsForOperatorId(uint128)": "519d97fe",
    "numOperators()": "bd820688",
    "numPendingValidators()": "e3b2918b",
    "updateOperatorControllingAddress(address,address)": "32f73258",
    "updateOperatorName(address,string)": "9f5db69c",
    "updateOperatorRewardAddress(address,address)": "e8f28a6c",
    "usePubKeysForValidatorSetup(bytes[])": "c3953502",
    "withdrawERC20(address)": "f4f3b200"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AmountOfValidatorDetailsExceedsLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"existingKey\",\"type\":\"bytes\"}],\"name\":\"CannotAddDuplicatePubKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotUseDisabledOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLengthOfZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPubKeyLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPubKeySetupCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"}],\"name\":\"MissingActiveValidatorDetails\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"}],\"name\":\"MissingPendingValidatorDetails\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"foundPubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"providedPubKey\",\"type\":\"bytes\"}],\"name\":\"NextOperatorPubKeyMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"NoOperatorFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"}],\"name\":\"NoPubKeyFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorOutOfPendingKeys\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"pubKeys\",\"type\":\"bytes[]\"}],\"name\":\"ActivePubKeysDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operatorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct INodeOperatorRegistry.ValidatorDetails[]\",\"name\":\"pubKeys\",\"type\":\"tuple[]\"}],\"name\":\"OperatorAddedValidatorDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"pubKeys\",\"type\":\"bytes[]\"}],\"name\":\"PendingPubKeysDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"pubKeys\",\"type\":\"bytes[]\"}],\"name\":\"PubKeysUsedForValidatorSetup\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AccessControlManager\",\"outputs\":[{\"internalType\":\"contract IAccessControlManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct INodeOperatorRegistry.ValidatorDetails[]\",\"name\":\"_validatorDetails\",\"type\":\"tuple[]\"}],\"name\":\"addNewValidatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardAddress\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubKeys\",\"type\":\"bytes[]\"}],\"name\":\"deleteActiveValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubKeys\",\"type\":\"bytes[]\"}],\"name\":\"deletePendingValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"disableOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"enableOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numNewValidators\",\"type\":\"uint256\"}],\"name\":\"getNextValidatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct INodeOperatorRegistry.ValidatorDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"foundValidators\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"getOperator\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controllingAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"activeValidators\",\"type\":\"uint128\"}],\"internalType\":\"struct INodeOperatorRegistry.Operator\",\"name\":\"operator\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"totalValidatorDetails\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"operatorId\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getOperatorIdForAddress\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_operatorId\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"}],\"name\":\"getOperatorIdForPubKey\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"getOperatorsActiveValidatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct INodeOperatorRegistry.ValidatorDetails[]\",\"name\":\"validatorDetails\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"getOperatorsPendingValidatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct INodeOperatorRegistry.ValidatorDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getPoRAddressList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoRAddressListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_operatorId\",\"type\":\"uint128\"}],\"name\":\"getRewardDetailsForOperatorId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"activeValidators\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOperators\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPendingValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOperatorAddress\",\"type\":\"address\"}],\"name\":\"updateOperatorControllingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateOperatorName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newRewardAddress\",\"type\":\"address\"}],\"name\":\"updateOperatorRewardAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubKeys\",\"type\":\"bytes[]\"}],\"name\":\"usePubKeysForValidatorSetup\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct INodeOperatorRegistry.ValidatorDetails[]\",\"name\":\"validatorDetails\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/max-taylor\",\"errors\":{\"AmountOfValidatorDetailsExceedsLimit()\":[{\"details\":\"Thrown when an operator is adding new validator details and this causes the total amount of operator's validator details to exceed uint128\"}],\"CannotAddDuplicatePubKey(bytes)\":[{\"details\":\"Thrown when a duplicate public key is added.\",\"params\":{\"existingKey\":\"The public key that already exists.\"}}],\"CannotUseDisabledOperator()\":[{\"details\":\"Thrown when an operator tries to use the node operator registry whilst they are disabled\"}],\"InvalidArrayLengthOfZero()\":[{\"details\":\"Thrown when an array length of zero is invalid.\"}],\"InvalidPubKeyLength()\":[{\"details\":\"Thrown when an operator is trying to add validator details and a provided pubKey isn't the correct length\"}],\"InvalidPubKeySetupCaller()\":[{\"details\":\"Throw when the msg.sender isn't the Deposit Manager contract\"}],\"InvalidSignatureLength()\":[{\"details\":\"Thrown when an operator is trying to add validator details and a provided signature isn't the correct length\"}],\"MissingActiveValidatorDetails(bytes)\":[{\"details\":\"Thrown when the pubKey doesn't exist in the active validator details set\",\"params\":{\"pubKey\":\"The missing pubKey\"}}],\"MissingPendingValidatorDetails(bytes)\":[{\"details\":\"Thrown when the given pubKey doesn't exist in the pending validator details sets\",\"params\":{\"pubKey\":\"The missing pubKey\"}}],\"NextOperatorPubKeyMismatch(bytes,bytes)\":[{\"details\":\"Thrown during setup of new validators, when comparing the next operator's public key to the provided public key they should match. This ensures consistency in the tracking of the active and pending validator details.\",\"params\":{\"foundPubKey\":\"The operator's next available public key\",\"providedPubKey\":\"The public key that was passed in as an argument\"}}],\"NoOperatorFound(address)\":[{\"details\":\"Thrown when an operator is not found.\",\"params\":{\"operator\":\"The address of the operator that was not found.\"}}],\"NoPubKeyFound(bytes)\":[{\"details\":\"Thrown when the given pubKey hasn't been added to the registry and cannot be found\",\"params\":{\"pubKey\":\"The public key that was not found.\"}}],\"OperatorAlreadyDisabled()\":[{\"details\":\"Thrown when an operator is already disabled.\"}],\"OperatorAlreadyEnabled()\":[{\"details\":\"Thrown when an operator is already enabled.\"}],\"OperatorAlreadyExists(address)\":[{\"details\":\"Thrown when an operator already exists.\",\"params\":{\"operator\":\"The address of the operator that already exists.\"}}],\"OperatorOutOfPendingKeys()\":[{\"details\":\"Thrown during the setup of new validators and when the operator that has no pending details left to use\"}]},\"events\":{\"ActivePubKeysDeleted(bytes[])\":{\"details\":\"Emitted when active public keys are deleted.\",\"params\":{\"pubKeys\":\"An array of public keys that were deleted.\"}},\"OperatorAdded(address,address)\":{\"details\":\"Emitted when a new operator is added.\",\"params\":{\"operatorAddress\":\"The address of the newly added operator.\",\"rewardAddress\":\"The address associated with the reward for the operator.\"}},\"OperatorAddedValidatorDetails(address,(bytes,bytes)[])\":{\"details\":\"Emitted when the validator details for an operator are added.\",\"params\":{\"operator\":\"The address of the operator for which the validator details were added.\",\"pubKeys\":\"An array of `ValidatorDetails` for the operator.\"}},\"OperatorDisabled(address)\":{\"details\":\"Emitted when an operator is disabled.\",\"params\":{\"operator\":\"The address of the operator that was disabled.\"}},\"OperatorEnabled(address)\":{\"details\":\"Emitted when an operator is enabled.\",\"params\":{\"operator\":\"The address of the operator that was enabled.\"}},\"PendingPubKeysDeleted(bytes[])\":{\"details\":\"Emitted when pending public keys are deleted.\",\"params\":{\"pubKeys\":\"An array of public keys that were deleted.\"}},\"PubKeysUsedForValidatorSetup(bytes[])\":{\"details\":\"Emitted when public keys are used for validator setup.\",\"params\":{\"pubKeys\":\"An array of public keys that were used for validator setup.\"}}},\"kind\":\"dev\",\"methods\":{\"AccessControlManager()\":{\"details\":\"Returns the address of the AccessControlManager contract\"},\"addNewValidatorDetails((bytes,bytes)[])\":{\"details\":\"Adds new validator details to the registry. /**Callable by node operator's to add their validator details to the setup queue\",\"params\":{\"_validatorDetails\":\"Array of ValidatorDetails to add.\"}},\"addOperator(string,address,address)\":{\"details\":\"Adds a new operator to the registry.\",\"params\":{\"_name\":\"Name of the operator.\",\"_operatorAddress\":\"Address of the operator.\",\"_rewardAddress\":\"Address of the reward recipient for this operator.\"}},\"deleteActiveValidators(bytes[])\":{\"details\":\"Allows the PLATFORM_ADMIN to delete validator public keys that have been used to setup a validator and that validator has now exited\",\"params\":{\"_pubKeys\":\"The public keys of the active validators to delete\"}},\"deletePendingValidators(bytes[])\":{\"details\":\"Allows the PLATFORM_ADMIN to delete validators that are pending. This is likely to be called via an admin if a public key fails the front-running checks\",\"params\":{\"_pubKeys\":\"The public keys of the pending validators to delete\"}},\"disableOperator(address)\":{\"details\":\"Disables an operator in the registry.\",\"params\":{\"_operatorAddress\":\"Address of the operator to disable.\"}},\"enableOperator(address)\":{\"details\":\"Enables an operator in the registry.\",\"params\":{\"_operatorAddress\":\"Address of the operator to enable.\"}},\"getNextValidatorDetails(uint256)\":{\"details\":\"Gets the next available validator details, ordered by operators with the least amount of active validators. There may be less available validators then the provided _numNewValidators amount, in that case the function will return an array of length equal to _numNewValidators but all indexes after the second return value; foundValidators, will be 0x0 values\",\"params\":{\"_numNewValidators\":\"The number of new validators to get details for.\"},\"returns\":{\"_0\":\"An array of ValidatorDetails and the length of the array of non-zero validator details\"}},\"getOperator(address)\":{\"details\":\"Returns the operator details for a given operator address\",\"params\":{\"_operatorAddress\":\"The address of the operator to retrieve\"},\"returns\":{\"operator\":\"The operator details, including name, reward address, and enabled status\",\"operatorId\":\"The operator's Id\",\"totalValidatorDetails\":\"The total amount of validator details for an operator\"}},\"getOperatorIdForAddress(address)\":{\"details\":\"Returns the operator ID for a given operator address\",\"params\":{\"_operator\":\"The address of the operator to retrieve the operator ID for\"},\"returns\":{\"_operatorId\":\"The operator ID for the given operator\"}},\"getOperatorIdForPubKey(bytes)\":{\"details\":\"Returns the `operatorId` associated with the given `pubKey`.\",\"params\":{\"pubKey\":\"The public key to lookup the `operatorId` for.\"}},\"getOperatorsActiveValidatorDetails(address)\":{\"details\":\"Returns the active validator details for a given operator address\",\"params\":{\"_operatorAddress\":\"The address of the operator to retrieve active validator details for\"},\"returns\":{\"validatorDetails\":\"The active validator details for the given operator\"}},\"getOperatorsPendingValidatorDetails(address)\":{\"details\":\"Returns the pending validator details for a given operator address\",\"params\":{\"_operatorAddress\":\"The address of the operator to retrieve pending validator details for\"},\"returns\":{\"_0\":\"validatorDetails The pending validator details for the given operator\"}},\"getPoRAddressList(uint256,uint256)\":{\"details\":\"Due to limitations of gas usage in off-chain calls, we need to support fetching the addresses in batches. EVM addresses need to be converted to human-readable strings. The address strings need to be in the same format that would be used when querying the balance of that address.\",\"params\":{\"endIndex\":\"The index of the last address in the batch. If `endIndex > getPoRAddressListLength()-1`, endIndex need to default to `getPoRAddressListLength()-1`. If `endIndex < startIndex`, the result would be an empty array.\",\"startIndex\":\"The index of the first address in the batch.\"},\"returns\":{\"_0\":\"Array of addresses as strings.\"}},\"getPoRAddressListLength()\":{\"returns\":{\"_0\":\"The array length\"}},\"getRewardDetailsForOperatorId(uint128)\":{\"details\":\"Returns the reward details for a given operator Id, this method is used in the swETH contract when paying swETH rewards\",\"params\":{\"_operatorId\":\"The operator Id to get the reward details for\"},\"returns\":{\"activeValidators\":\"The amount of active validators for the operator\",\"rewardAddress\":\"The reward address of the operator\"}},\"numOperators()\":{\"details\":\"Returns the number of operators in the registry\"},\"numPendingValidators()\":{\"details\":\"Returns the amount of pending validator keys in the registry\"},\"updateOperatorControllingAddress(address,address)\":{\"details\":\"Updates the controlling address of an operator in the registry.\",\"params\":{\"_newOperatorAddress\":\"New address of the operator.\",\"_operatorAddress\":\"Current address of the operator.\"}},\"updateOperatorName(address,string)\":{\"details\":\"Updates the name of an operator in the registry\",\"params\":{\"_name\":\"The new name for the operator\",\"_operatorAddress\":\"The address of the operator to update\"}},\"updateOperatorRewardAddress(address,address)\":{\"details\":\"Updates the reward address of an operator in the registry.\",\"params\":{\"_newRewardAddress\":\"New reward address for the operator.\",\"_operatorAddress\":\"Address of the operator to update.\"}},\"usePubKeysForValidatorSetup(bytes[])\":{\"details\":\"Allows the DepositManager to move provided _pubKeys from the pending validator details arrays into the active validator details array. It also returns the validator details, so that the DepositManager can pass the signature along to the ETH2 deposit contract.\",\"params\":{\"_pubKeys\":\"Array of public keys to use for validator setup.\"},\"returns\":{\"validatorDetails\":\"The associated validator details for the given public keys\"}},\"withdrawERC20(address)\":{\"details\":\"This method withdraws contract's _token balance to a platform admin\",\"params\":{\"_token\":\"The ERC20 token to withdraw from the contract\"}}},\"title\":\"INodeOperatorRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOperator(string,address,address)\":{\"notice\":\"Throws if an operator already exists with the given _operatorAddress\"},\"deleteActiveValidators(bytes[])\":{\"notice\":\"Throws NoPubKeyFound if any of the provided pubKeys is not found in the active validators setThrows InvalidArrayLengthOfZero if the length of _pubKeys is 0\"},\"deletePendingValidators(bytes[])\":{\"notice\":\"Throws InvalidArrayLengthOfZero if the length of _pubKeys is 0Throws NoPubKeyFound if any of the provided pubKeys is not found in the pending validators set\"},\"disableOperator(address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"enableOperator(address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"getNextValidatorDetails(uint256)\":{\"notice\":\"This method tries to return enough validator details to equal the provided _numNewValidators, but if there aren't enough validator details to find, it will simply return what it found, and the caller will need to check for empty values.\"},\"getOperator(address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"getOperatorIdForAddress(address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"getOperatorIdForPubKey(bytes)\":{\"notice\":\"Returns 0 if no operatorId controls the pubKey\"},\"getOperatorsActiveValidatorDetails(address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"getOperatorsPendingValidatorDetails(address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"getPoRAddressList(uint256,uint256)\":{\"notice\":\"Get a batch of human-readable addresses from the address list.\"},\"getPoRAddressListLength()\":{\"notice\":\"Get total number of addresses in the list.\"},\"updateOperatorControllingAddress(address,address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"updateOperatorName(address,string)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"updateOperatorRewardAddress(address,address)\":{\"notice\":\"Throws NoOperatorFound if the operator address is not found in the registry\"},\"usePubKeysForValidatorSetup(bytes[])\":{\"notice\":\"This method will be called when the DepositManager is setting up new validators.\"}},\"notice\":\"Interface for the Node Operator Registry contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol\":\"INodeOperatorRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol\":{\"keccak256\":\"0x10561da35ef938e5039a72588620ca6df9187cd930747d261f0ef1ef45a83d8d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c04d422b0c64886344e45fd04001556fb800711e08d4068c9dff576f086024b3\",\"dweb:/ipfs/QmcPDVzFuP2FS8AkoYDyhMGrY6tdRdfMf5pj763s8J4vji\"]},\"out/NodeOperatorRegistry/contracts/interfaces/IDepositManager.sol\":{\"keccak256\":\"0x55d2a3297326c2e07bf64326fb185146b1fdb0edf9b848a70feea25cf576eff3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d2028d72c1c5e920363fdbc19edf4098d24fcd78f30f560bd70f940421b3df46\",\"dweb:/ipfs/QmNvh5aP6N4FxvNVw1RBqTGou6LX27S6uDc5bFpy3K6WwV\"]},\"out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol\":{\"keccak256\":\"0x25c6dac581ce443f8ed3f7cb4c0e452a6161ed8f98c74bb28f47ed698d2c5a1f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18ac4625aa1198b80639e09925f0f48733df4fe42d78e033b2810221adbfdcb8\",\"dweb:/ipfs/QmQnhokjGMFN3EjqvnMFetHJPVWKtPtScZQLyduuHRLQ5s\"]},\"out/NodeOperatorRegistry/contracts/interfaces/IswETH.sol\":{\"keccak256\":\"0x6191d18854166fa8e9b0e32f18e8671f41026ddf4679377c48963c8c03837089\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f4d257d6f352aa712c152406178f1316a374ee685f51f24e182b99ed120ce328\",\"dweb:/ipfs/Qmbu1WP23aAaijW2LJFWVCzFst7hAbwnQ7U5mwY4oKas8r\"]},\"out/NodeOperatorRegistry/contracts/vendors/IPoRAddresses.sol\":{\"keccak256\":\"0xb63361087cbd29ead80f4d07b0751c780632a09786301aae9a2229470d96fd39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a107a9ed62725cf6171ba15756c85cb9320788bf1bfa3bb97eb2f670644b3479\",\"dweb:/ipfs/QmXaLN7EK6Vrxo3n2ZLLHa7XzMSaE4LzspNBWonJphZmUE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AmountOfValidatorDetailsExceedsLimit"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "existingKey",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "CannotAddDuplicatePubKey"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotUseDisabledOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidArrayLengthOfZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPubKeyLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPubKeySetupCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "MissingActiveValidatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "MissingPendingValidatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "foundPubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "providedPubKey",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NextOperatorPubKeyMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NoOperatorFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NoPubKeyFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorAlreadyDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorAlreadyEnabled"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorOutOfPendingKeys"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "pubKeys",
              "type": "bytes[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ActivePubKeysDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operatorAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "rewardAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
              "name": "pubKeys",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAddedValidatorDetails",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OperatorDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OperatorEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "pubKeys",
              "type": "bytes[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PendingPubKeysDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "pubKeys",
              "type": "bytes[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PubKeysUsedForValidatorSetup",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "AccessControlManager",
          "outputs": [
            {
              "internalType": "contract IAccessControlManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
              "name": "_validatorDetails",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewValidatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addOperator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "_pubKeys",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteActiveValidators"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "_pubKeys",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deletePendingValidators"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableOperator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numNewValidators",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextValidatorDetails",
          "outputs": [
            {
              "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "foundValidators",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperator",
          "outputs": [
            {
              "internalType": "struct INodeOperatorRegistry.Operator",
              "name": "operator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "controllingAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "activeValidators",
                  "type": "uint128"
                }
              ]
            },
            {
              "internalType": "uint128",
              "name": "totalValidatorDetails",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "operatorId",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getOperatorIdForAddress",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "_operatorId",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getOperatorIdForPubKey",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getOperatorsActiveValidatorDetails",
          "outputs": [
            {
              "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
              "name": "validatorDetails",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getOperatorsPendingValidatorDetails",
          "outputs": [
            {
              "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoRAddressList",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoRAddressListLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_operatorId",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getRewardDetailsForOperatorId",
          "outputs": [
            {
              "internalType": "address",
              "name": "rewardAddress",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "activeValidators",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "numOperators",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "numPendingValidators",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newOperatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorControllingAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorName"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newRewardAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorRewardAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "_pubKeys",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "usePubKeysForValidatorSetup",
          "outputs": [
            {
              "internalType": "struct INodeOperatorRegistry.ValidatorDetails[]",
              "name": "validatorDetails",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "AccessControlManager()": {
            "details": "Returns the address of the AccessControlManager contract"
          },
          "addNewValidatorDetails((bytes,bytes)[])": {
            "details": "Adds new validator details to the registry. /**Callable by node operator's to add their validator details to the setup queue",
            "params": {
              "_validatorDetails": "Array of ValidatorDetails to add."
            }
          },
          "addOperator(string,address,address)": {
            "details": "Adds a new operator to the registry.",
            "params": {
              "_name": "Name of the operator.",
              "_operatorAddress": "Address of the operator.",
              "_rewardAddress": "Address of the reward recipient for this operator."
            }
          },
          "deleteActiveValidators(bytes[])": {
            "details": "Allows the PLATFORM_ADMIN to delete validator public keys that have been used to setup a validator and that validator has now exited",
            "params": {
              "_pubKeys": "The public keys of the active validators to delete"
            }
          },
          "deletePendingValidators(bytes[])": {
            "details": "Allows the PLATFORM_ADMIN to delete validators that are pending. This is likely to be called via an admin if a public key fails the front-running checks",
            "params": {
              "_pubKeys": "The public keys of the pending validators to delete"
            }
          },
          "disableOperator(address)": {
            "details": "Disables an operator in the registry.",
            "params": {
              "_operatorAddress": "Address of the operator to disable."
            }
          },
          "enableOperator(address)": {
            "details": "Enables an operator in the registry.",
            "params": {
              "_operatorAddress": "Address of the operator to enable."
            }
          },
          "getNextValidatorDetails(uint256)": {
            "details": "Gets the next available validator details, ordered by operators with the least amount of active validators. There may be less available validators then the provided _numNewValidators amount, in that case the function will return an array of length equal to _numNewValidators but all indexes after the second return value; foundValidators, will be 0x0 values",
            "params": {
              "_numNewValidators": "The number of new validators to get details for."
            },
            "returns": {
              "_0": "An array of ValidatorDetails and the length of the array of non-zero validator details"
            }
          },
          "getOperator(address)": {
            "details": "Returns the operator details for a given operator address",
            "params": {
              "_operatorAddress": "The address of the operator to retrieve"
            },
            "returns": {
              "operator": "The operator details, including name, reward address, and enabled status",
              "operatorId": "The operator's Id",
              "totalValidatorDetails": "The total amount of validator details for an operator"
            }
          },
          "getOperatorIdForAddress(address)": {
            "details": "Returns the operator ID for a given operator address",
            "params": {
              "_operator": "The address of the operator to retrieve the operator ID for"
            },
            "returns": {
              "_operatorId": "The operator ID for the given operator"
            }
          },
          "getOperatorIdForPubKey(bytes)": {
            "details": "Returns the `operatorId` associated with the given `pubKey`.",
            "params": {
              "pubKey": "The public key to lookup the `operatorId` for."
            }
          },
          "getOperatorsActiveValidatorDetails(address)": {
            "details": "Returns the active validator details for a given operator address",
            "params": {
              "_operatorAddress": "The address of the operator to retrieve active validator details for"
            },
            "returns": {
              "validatorDetails": "The active validator details for the given operator"
            }
          },
          "getOperatorsPendingValidatorDetails(address)": {
            "details": "Returns the pending validator details for a given operator address",
            "params": {
              "_operatorAddress": "The address of the operator to retrieve pending validator details for"
            },
            "returns": {
              "_0": "validatorDetails The pending validator details for the given operator"
            }
          },
          "getPoRAddressList(uint256,uint256)": {
            "details": "Due to limitations of gas usage in off-chain calls, we need to support fetching the addresses in batches. EVM addresses need to be converted to human-readable strings. The address strings need to be in the same format that would be used when querying the balance of that address.",
            "params": {
              "endIndex": "The index of the last address in the batch. If `endIndex > getPoRAddressListLength()-1`, endIndex need to default to `getPoRAddressListLength()-1`. If `endIndex < startIndex`, the result would be an empty array.",
              "startIndex": "The index of the first address in the batch."
            },
            "returns": {
              "_0": "Array of addresses as strings."
            }
          },
          "getPoRAddressListLength()": {
            "returns": {
              "_0": "The array length"
            }
          },
          "getRewardDetailsForOperatorId(uint128)": {
            "details": "Returns the reward details for a given operator Id, this method is used in the swETH contract when paying swETH rewards",
            "params": {
              "_operatorId": "The operator Id to get the reward details for"
            },
            "returns": {
              "activeValidators": "The amount of active validators for the operator",
              "rewardAddress": "The reward address of the operator"
            }
          },
          "numOperators()": {
            "details": "Returns the number of operators in the registry"
          },
          "numPendingValidators()": {
            "details": "Returns the amount of pending validator keys in the registry"
          },
          "updateOperatorControllingAddress(address,address)": {
            "details": "Updates the controlling address of an operator in the registry.",
            "params": {
              "_newOperatorAddress": "New address of the operator.",
              "_operatorAddress": "Current address of the operator."
            }
          },
          "updateOperatorName(address,string)": {
            "details": "Updates the name of an operator in the registry",
            "params": {
              "_name": "The new name for the operator",
              "_operatorAddress": "The address of the operator to update"
            }
          },
          "updateOperatorRewardAddress(address,address)": {
            "details": "Updates the reward address of an operator in the registry.",
            "params": {
              "_newRewardAddress": "New reward address for the operator.",
              "_operatorAddress": "Address of the operator to update."
            }
          },
          "usePubKeysForValidatorSetup(bytes[])": {
            "details": "Allows the DepositManager to move provided _pubKeys from the pending validator details arrays into the active validator details array. It also returns the validator details, so that the DepositManager can pass the signature along to the ETH2 deposit contract.",
            "params": {
              "_pubKeys": "Array of public keys to use for validator setup."
            },
            "returns": {
              "validatorDetails": "The associated validator details for the given public keys"
            }
          },
          "withdrawERC20(address)": {
            "details": "This method withdraws contract's _token balance to a platform admin",
            "params": {
              "_token": "The ERC20 token to withdraw from the contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addOperator(string,address,address)": {
            "notice": "Throws if an operator already exists with the given _operatorAddress"
          },
          "deleteActiveValidators(bytes[])": {
            "notice": "Throws NoPubKeyFound if any of the provided pubKeys is not found in the active validators setThrows InvalidArrayLengthOfZero if the length of _pubKeys is 0"
          },
          "deletePendingValidators(bytes[])": {
            "notice": "Throws InvalidArrayLengthOfZero if the length of _pubKeys is 0Throws NoPubKeyFound if any of the provided pubKeys is not found in the pending validators set"
          },
          "disableOperator(address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "enableOperator(address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "getNextValidatorDetails(uint256)": {
            "notice": "This method tries to return enough validator details to equal the provided _numNewValidators, but if there aren't enough validator details to find, it will simply return what it found, and the caller will need to check for empty values."
          },
          "getOperator(address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "getOperatorIdForAddress(address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "getOperatorIdForPubKey(bytes)": {
            "notice": "Returns 0 if no operatorId controls the pubKey"
          },
          "getOperatorsActiveValidatorDetails(address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "getOperatorsPendingValidatorDetails(address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "getPoRAddressList(uint256,uint256)": {
            "notice": "Get a batch of human-readable addresses from the address list."
          },
          "getPoRAddressListLength()": {
            "notice": "Get total number of addresses in the list."
          },
          "updateOperatorControllingAddress(address,address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "updateOperatorName(address,string)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "updateOperatorRewardAddress(address,address)": {
            "notice": "Throws NoOperatorFound if the operator address is not found in the registry"
          },
          "usePubKeysForValidatorSetup(bytes[])": {
            "notice": "This method will be called when the DepositManager is setting up new validators."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol": "INodeOperatorRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol": {
        "keccak256": "0x10561da35ef938e5039a72588620ca6df9187cd930747d261f0ef1ef45a83d8d",
        "urls": [
          "bzz-raw://c04d422b0c64886344e45fd04001556fb800711e08d4068c9dff576f086024b3",
          "dweb:/ipfs/QmcPDVzFuP2FS8AkoYDyhMGrY6tdRdfMf5pj763s8J4vji"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/IDepositManager.sol": {
        "keccak256": "0x55d2a3297326c2e07bf64326fb185146b1fdb0edf9b848a70feea25cf576eff3",
        "urls": [
          "bzz-raw://d2028d72c1c5e920363fdbc19edf4098d24fcd78f30f560bd70f940421b3df46",
          "dweb:/ipfs/QmNvh5aP6N4FxvNVw1RBqTGou6LX27S6uDc5bFpy3K6WwV"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol": {
        "keccak256": "0x25c6dac581ce443f8ed3f7cb4c0e452a6161ed8f98c74bb28f47ed698d2c5a1f",
        "urls": [
          "bzz-raw://18ac4625aa1198b80639e09925f0f48733df4fe42d78e033b2810221adbfdcb8",
          "dweb:/ipfs/QmQnhokjGMFN3EjqvnMFetHJPVWKtPtScZQLyduuHRLQ5s"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/IswETH.sol": {
        "keccak256": "0x6191d18854166fa8e9b0e32f18e8671f41026ddf4679377c48963c8c03837089",
        "urls": [
          "bzz-raw://f4d257d6f352aa712c152406178f1316a374ee685f51f24e182b99ed120ce328",
          "dweb:/ipfs/Qmbu1WP23aAaijW2LJFWVCzFst7hAbwnQ7U5mwY4oKas8r"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/vendors/IPoRAddresses.sol": {
        "keccak256": "0xb63361087cbd29ead80f4d07b0751c780632a09786301aae9a2229470d96fd39",
        "urls": [
          "bzz-raw://a107a9ed62725cf6171ba15756c85cb9320788bf1bfa3bb97eb2f670644b3479",
          "dweb:/ipfs/QmXaLN7EK6Vrxo3n2ZLLHa7XzMSaE4LzspNBWonJphZmUE"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "ast": {
    "absolutePath": "out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol",
    "id": 4223,
    "exportedSymbols": {
      "IAccessControlManager": [
        3860
      ],
      "IERC20": [
        1365
      ],
      "INodeOperatorRegistry": [
        4222
      ],
      "IPoRAddresses": [
        4947
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14563:13",
    "nodes": [
      {
        "id": 3912,
        "nodeType": "PragmaDirective",
        "src": "39:23:13",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 3914,
        "nodeType": "ImportDirective",
        "src": "64:70:13",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4223,
        "sourceUnit": 1366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3913,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1365,
              "src": "72:6:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3916,
        "nodeType": "ImportDirective",
        "src": "136:78:13",
        "nodes": [],
        "absolutePath": "out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol",
        "file": "../interfaces/IAccessControlManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4223,
        "sourceUnit": 3861,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3915,
              "name": "IAccessControlManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3860,
              "src": "144:21:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3918,
        "nodeType": "ImportDirective",
        "src": "216:59:13",
        "nodes": [],
        "absolutePath": "out/NodeOperatorRegistry/contracts/vendors/IPoRAddresses.sol",
        "file": "../vendors/IPoRAddresses.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4223,
        "sourceUnit": 4948,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3917,
              "name": "IPoRAddresses",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4947,
              "src": "224:13:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4222,
        "nodeType": "ContractDefinition",
        "src": "420:14181:13",
        "nodes": [
          {
            "id": 3926,
            "nodeType": "StructDefinition",
            "src": "676:68:13",
            "nodes": [],
            "canonicalName": "INodeOperatorRegistry.ValidatorDetails",
            "members": [
              {
                "constant": false,
                "id": 3923,
                "mutability": "mutable",
                "name": "pubKey",
                "nameLocation": "712:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 3926,
                "src": "706:12:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3922,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "706:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3925,
                "mutability": "mutable",
                "name": "signature",
                "nameLocation": "730:9:13",
                "nodeType": "VariableDeclaration",
                "scope": 3926,
                "src": "724:15:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3924,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "724:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValidatorDetails",
            "nameLocation": "683:16:13",
            "scope": 4222,
            "visibility": "public"
          },
          {
            "id": 3937,
            "nodeType": "StructDefinition",
            "src": "1148:145:13",
            "nodes": [],
            "canonicalName": "INodeOperatorRegistry.Operator",
            "members": [
              {
                "constant": false,
                "id": 3928,
                "mutability": "mutable",
                "name": "enabled",
                "nameLocation": "1175:7:13",
                "nodeType": "VariableDeclaration",
                "scope": 3937,
                "src": "1170:12:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3927,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1170:4:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3930,
                "mutability": "mutable",
                "name": "rewardAddress",
                "nameLocation": "1196:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 3937,
                "src": "1188:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3929,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3932,
                "mutability": "mutable",
                "name": "controllingAddress",
                "nameLocation": "1223:18:13",
                "nodeType": "VariableDeclaration",
                "scope": 3937,
                "src": "1215:26:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3931,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1215:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3934,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1254:4:13",
                "nodeType": "VariableDeclaration",
                "scope": 3937,
                "src": "1247:11:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3933,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1247:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3936,
                "mutability": "mutable",
                "name": "activeValidators",
                "nameLocation": "1272:16:13",
                "nodeType": "VariableDeclaration",
                "scope": 3937,
                "src": "1264:24:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 3935,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1264:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Operator",
            "nameLocation": "1155:8:13",
            "scope": 4222,
            "visibility": "public"
          },
          {
            "id": 3944,
            "nodeType": "EventDefinition",
            "src": "1538:68:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3938,
              "nodeType": "StructuredDocumentation",
              "src": "1321:214:13",
              "text": " @dev  Emitted when a new operator is added.\n @param operatorAddress  The address of the newly added operator.\n @param rewardAddress    The address associated with the reward for the operator."
            },
            "eventSelector": "0780dc183feb0e4f9714cd802b3c0a21894b7ccb4172c992569d2acb5d45f91c",
            "name": "OperatorAdded",
            "nameLocation": "1544:13:13",
            "parameters": {
              "id": 3943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3940,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorAddress",
                  "nameLocation": "1566:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3944,
                  "src": "1558:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3942,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAddress",
                  "nameLocation": "1591:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3944,
                  "src": "1583:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:48:13"
            }
          },
          {
            "id": 3949,
            "nodeType": "EventDefinition",
            "src": "1738:48:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3945,
              "nodeType": "StructuredDocumentation",
              "src": "1610:125:13",
              "text": " @dev  Emitted when an operator is enabled.\n @param operator  The address of the operator that was enabled."
            },
            "eventSelector": "9e532d260bd7dde07708a6b1f7c64042546243d79bac23514cd74fcfc1a01fe4",
            "name": "OperatorEnabled",
            "nameLocation": "1744:15:13",
            "parameters": {
              "id": 3948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3947,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1776:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3949,
                  "src": "1760:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1759:26:13"
            }
          },
          {
            "id": 3954,
            "nodeType": "EventDefinition",
            "src": "1920:49:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3950,
              "nodeType": "StructuredDocumentation",
              "src": "1790:127:13",
              "text": " @dev  Emitted when an operator is disabled.\n @param operator  The address of the operator that was disabled."
            },
            "eventSelector": "23cd406c7cafe6d88c3f1c1cc16e438745a4236aec25906be2046ca16c36bd1e",
            "name": "OperatorDisabled",
            "nameLocation": "1926:16:13",
            "parameters": {
              "id": 3953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3952,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1959:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3954,
                  "src": "1943:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:26:13"
            }
          },
          {
            "id": 3963,
            "nodeType": "EventDefinition",
            "src": "2223:102:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3955,
              "nodeType": "StructuredDocumentation",
              "src": "1973:247:13",
              "text": " @dev  Emitted when the validator details for an operator are added.\n @param operator  The address of the operator for which the validator details were added.\n @param pubKeys   An array of `ValidatorDetails` for the operator."
            },
            "eventSelector": "df1cf9e0880be23b22c16a133756c26cf954f86ac43a40099e9c3969df9feb54",
            "name": "OperatorAddedValidatorDetails",
            "nameLocation": "2229:29:13",
            "parameters": {
              "id": 3962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3957,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2280:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3963,
                  "src": "2264:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3961,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubKeys",
                  "nameLocation": "2313:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3963,
                  "src": "2294:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3959,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3958,
                        "name": "ValidatorDetails",
                        "nameLocations": [
                          "2294:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3926,
                        "src": "2294:16:13"
                      },
                      "referencedDeclaration": 3926,
                      "src": "2294:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidatorDetails_$3926_storage_ptr",
                        "typeString": "struct INodeOperatorRegistry.ValidatorDetails"
                      }
                    },
                    "id": 3960,
                    "nodeType": "ArrayTypeName",
                    "src": "2294:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_storage_$dyn_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2258:66:13"
            }
          },
          {
            "id": 3969,
            "nodeType": "EventDefinition",
            "src": "2461:44:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3964,
              "nodeType": "StructuredDocumentation",
              "src": "2329:129:13",
              "text": " @dev  Emitted when active public keys are deleted.\n @param pubKeys  An array of public keys that were deleted."
            },
            "eventSelector": "790d3361478ddb811f265789ce5dddc293527ee2bc8951304a9de1d849600bb9",
            "name": "ActivePubKeysDeleted",
            "nameLocation": "2467:20:13",
            "parameters": {
              "id": 3968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3967,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubKeys",
                  "nameLocation": "2496:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3969,
                  "src": "2488:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3965,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2488:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3966,
                    "nodeType": "ArrayTypeName",
                    "src": "2488:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:17:13"
            }
          },
          {
            "id": 3975,
            "nodeType": "EventDefinition",
            "src": "2642:45:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3970,
              "nodeType": "StructuredDocumentation",
              "src": "2509:130:13",
              "text": " @dev  Emitted when pending public keys are deleted.\n @param pubKeys  An array of public keys that were deleted."
            },
            "eventSelector": "9b3c43de1c4440da470f4b2b750fb6ebae2d6684dac752e4ee4d7fb7ac1b654d",
            "name": "PendingPubKeysDeleted",
            "nameLocation": "2648:21:13",
            "parameters": {
              "id": 3974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubKeys",
                  "nameLocation": "2678:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3975,
                  "src": "2670:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3971,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2670:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3972,
                    "nodeType": "ArrayTypeName",
                    "src": "2670:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2669:17:13"
            }
          },
          {
            "id": 3981,
            "nodeType": "EventDefinition",
            "src": "2850:52:13",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3976,
              "nodeType": "StructuredDocumentation",
              "src": "2691:156:13",
              "text": " @dev  Emitted when public keys are used for validator setup.\n @param pubKeys  An array of public keys that were used for validator setup."
            },
            "eventSelector": "0f4e549c79372febae129e43b9a8b39280d5fab140fdf26f839ae647f857d3e6",
            "name": "PubKeysUsedForValidatorSetup",
            "nameLocation": "2856:28:13",
            "parameters": {
              "id": 3980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubKeys",
                  "nameLocation": "2893:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3981,
                  "src": "2885:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3977,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2885:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3978,
                    "nodeType": "ArrayTypeName",
                    "src": "2885:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2884:17:13"
            }
          },
          {
            "id": 3986,
            "nodeType": "ErrorDefinition",
            "src": "3060:40:13",
            "nodes": [],
            "documentation": {
              "id": 3982,
              "nodeType": "StructuredDocumentation",
              "src": "2930:127:13",
              "text": " @dev Thrown when an operator is not found.\n @param operator  The address of the operator that was not found."
            },
            "errorSelector": "d77a5a4f",
            "name": "NoOperatorFound",
            "nameLocation": "3066:15:13",
            "parameters": {
              "id": 3985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3984,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3090:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3986,
                  "src": "3082:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:18:13"
            }
          },
          {
            "id": 3991,
            "nodeType": "ErrorDefinition",
            "src": "3236:46:13",
            "nodes": [],
            "documentation": {
              "id": 3987,
              "nodeType": "StructuredDocumentation",
              "src": "3104:129:13",
              "text": " @dev Thrown when an operator already exists.\n @param operator The address of the operator that already exists."
            },
            "errorSelector": "00a52166",
            "name": "OperatorAlreadyExists",
            "nameLocation": "3242:21:13",
            "parameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3989,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3272:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "3264:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3264:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3263:18:13"
            }
          },
          {
            "id": 3994,
            "nodeType": "ErrorDefinition",
            "src": "3352:31:13",
            "nodes": [],
            "documentation": {
              "id": 3992,
              "nodeType": "StructuredDocumentation",
              "src": "3286:63:13",
              "text": " @dev Thrown when an operator is already enabled."
            },
            "errorSelector": "f4ef2b3f",
            "name": "OperatorAlreadyEnabled",
            "nameLocation": "3358:22:13",
            "parameters": {
              "id": 3993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:2:13"
            }
          },
          {
            "id": 3997,
            "nodeType": "ErrorDefinition",
            "src": "3454:32:13",
            "nodes": [],
            "documentation": {
              "id": 3995,
              "nodeType": "StructuredDocumentation",
              "src": "3387:64:13",
              "text": " @dev Thrown when an operator is already disabled."
            },
            "errorSelector": "c03ee92b",
            "name": "OperatorAlreadyDisabled",
            "nameLocation": "3460:23:13",
            "parameters": {
              "id": 3996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3483:2:13"
            }
          },
          {
            "id": 4000,
            "nodeType": "ErrorDefinition",
            "src": "3560:33:13",
            "nodes": [],
            "documentation": {
              "id": 3998,
              "nodeType": "StructuredDocumentation",
              "src": "3490:67:13",
              "text": " @dev Thrown when an array length of zero is invalid."
            },
            "errorSelector": "8795a193",
            "name": "InvalidArrayLengthOfZero",
            "nameLocation": "3566:24:13",
            "parameters": {
              "id": 3999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3590:2:13"
            }
          },
          {
            "id": 4003,
            "nodeType": "ErrorDefinition",
            "src": "3758:45:13",
            "nodes": [],
            "documentation": {
              "id": 4001,
              "nodeType": "StructuredDocumentation",
              "src": "3597:158:13",
              "text": " @dev Thrown when an operator is adding new validator details and this causes the total amount of operator's validator details to exceed uint128"
            },
            "errorSelector": "b2203add",
            "name": "AmountOfValidatorDetailsExceedsLimit",
            "nameLocation": "3764:36:13",
            "parameters": {
              "id": 4002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3800:2:13"
            }
          },
          {
            "id": 4010,
            "nodeType": "ErrorDefinition",
            "src": "4187:74:13",
            "nodes": [],
            "documentation": {
              "id": 4004,
              "nodeType": "StructuredDocumentation",
              "src": "3807:377:13",
              "text": " @dev Thrown during setup of new validators, when comparing the next operator's public key to the provided public key they should match. This ensures consistency in the tracking of the active and pending validator details.\n @param foundPubKey The operator's next available public key\n @param providedPubKey The public key that was passed in as an argument"
            },
            "errorSelector": "414d69ed",
            "name": "NextOperatorPubKeyMismatch",
            "nameLocation": "4193:26:13",
            "parameters": {
              "id": 4009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4006,
                  "mutability": "mutable",
                  "name": "foundPubKey",
                  "nameLocation": "4226:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4010,
                  "src": "4220:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4005,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4220:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4008,
                  "mutability": "mutable",
                  "name": "providedPubKey",
                  "nameLocation": "4245:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4010,
                  "src": "4239:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4007,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4219:41:13"
            }
          },
          {
            "id": 4013,
            "nodeType": "ErrorDefinition",
            "src": "4391:33:13",
            "nodes": [],
            "documentation": {
              "id": 4011,
              "nodeType": "StructuredDocumentation",
              "src": "4265:123:13",
              "text": " @dev Thrown during the setup of new validators and when the operator that has no pending details left to use"
            },
            "errorSelector": "c5a7f85e",
            "name": "OperatorOutOfPendingKeys",
            "nameLocation": "4397:24:13",
            "parameters": {
              "id": 4012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4421:2:13"
            }
          },
          {
            "id": 4018,
            "nodeType": "ErrorDefinition",
            "src": "4588:34:13",
            "nodes": [],
            "documentation": {
              "id": 4014,
              "nodeType": "StructuredDocumentation",
              "src": "4428:157:13",
              "text": " @dev Thrown when the given pubKey hasn't been added to the registry and cannot be found\n @param pubKey  The public key that was not found."
            },
            "errorSelector": "6d078a73",
            "name": "NoPubKeyFound",
            "nameLocation": "4594:13:13",
            "parameters": {
              "id": 4017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4016,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "4614:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4018,
                  "src": "4608:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4015,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4608:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4607:14:13"
            }
          },
          {
            "id": 4021,
            "nodeType": "ErrorDefinition",
            "src": "4737:34:13",
            "nodes": [],
            "documentation": {
              "id": 4019,
              "nodeType": "StructuredDocumentation",
              "src": "4626:108:13",
              "text": " @dev Thrown when an operator tries to use the node operator registry whilst they are disabled"
            },
            "errorSelector": "d35a343f",
            "name": "CannotUseDisabledOperator",
            "nameLocation": "4743:25:13",
            "parameters": {
              "id": 4020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4768:2:13"
            }
          },
          {
            "id": 4026,
            "nodeType": "ErrorDefinition",
            "src": "4903:50:13",
            "nodes": [],
            "documentation": {
              "id": 4022,
              "nodeType": "StructuredDocumentation",
              "src": "4775:125:13",
              "text": " @dev Thrown when a duplicate public key is added.\n @param existingKey  The public key that already exists."
            },
            "errorSelector": "358b603d",
            "name": "CannotAddDuplicatePubKey",
            "nameLocation": "4909:24:13",
            "parameters": {
              "id": 4025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4024,
                  "mutability": "mutable",
                  "name": "existingKey",
                  "nameLocation": "4940:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4026,
                  "src": "4934:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4934:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4933:19:13"
            }
          },
          {
            "id": 4031,
            "nodeType": "ErrorDefinition",
            "src": "5099:51:13",
            "nodes": [],
            "documentation": {
              "id": 4027,
              "nodeType": "StructuredDocumentation",
              "src": "4957:139:13",
              "text": " @dev Thrown when the given pubKey doesn't exist in the pending validator details sets\n @param pubKey  The missing pubKey"
            },
            "errorSelector": "def0e294",
            "name": "MissingPendingValidatorDetails",
            "nameLocation": "5105:30:13",
            "parameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4029,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "5142:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4031,
                  "src": "5136:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5136:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5135:14:13"
            }
          },
          {
            "id": 4036,
            "nodeType": "ErrorDefinition",
            "src": "5288:50:13",
            "nodes": [],
            "documentation": {
              "id": 4032,
              "nodeType": "StructuredDocumentation",
              "src": "5154:131:13",
              "text": " @dev Thrown when the pubKey doesn't exist in the active validator details set\n @param pubKey  The missing pubKey"
            },
            "errorSelector": "9b0a4abd",
            "name": "MissingActiveValidatorDetails",
            "nameLocation": "5294:29:13",
            "parameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4034,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "5330:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4036,
                  "src": "5324:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5324:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5323:14:13"
            }
          },
          {
            "id": 4039,
            "nodeType": "ErrorDefinition",
            "src": "5425:33:13",
            "nodes": [],
            "documentation": {
              "id": 4037,
              "nodeType": "StructuredDocumentation",
              "src": "5342:80:13",
              "text": " @dev Throw when the msg.sender isn't the Deposit Manager contract"
            },
            "errorSelector": "78c55f0e",
            "name": "InvalidPubKeySetupCaller",
            "nameLocation": "5431:24:13",
            "parameters": {
              "id": 4038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5455:2:13"
            }
          },
          {
            "id": 4042,
            "nodeType": "ErrorDefinition",
            "src": "5590:28:13",
            "nodes": [],
            "documentation": {
              "id": 4040,
              "nodeType": "StructuredDocumentation",
              "src": "5462:125:13",
              "text": " @dev Thrown when an operator is trying to add validator details and a provided pubKey isn't the correct length"
            },
            "errorSelector": "9f106472",
            "name": "InvalidPubKeyLength",
            "nameLocation": "5596:19:13",
            "parameters": {
              "id": 4041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5615:2:13"
            }
          },
          {
            "id": 4045,
            "nodeType": "ErrorDefinition",
            "src": "5753:31:13",
            "nodes": [],
            "documentation": {
              "id": 4043,
              "nodeType": "StructuredDocumentation",
              "src": "5622:128:13",
              "text": " @dev Thrown when an operator is trying to add validator details and a provided signature isn't the correct length"
            },
            "errorSelector": "4be6321b",
            "name": "InvalidSignatureLength",
            "nameLocation": "5759:22:13",
            "parameters": {
              "id": 4044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5781:2:13"
            }
          },
          {
            "id": 4052,
            "nodeType": "FunctionDefinition",
            "src": "6022:47:13",
            "nodes": [],
            "documentation": {
              "id": 4046,
              "nodeType": "StructuredDocumentation",
              "src": "5867:152:13",
              "text": " @dev This method withdraws contract's _token balance to a platform admin\n @param _token The ERC20 token to withdraw from the contract"
            },
            "functionSelector": "f4f3b200",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawERC20",
            "nameLocation": "6031:13:13",
            "parameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6052:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "6045:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1365",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4048,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4047,
                      "name": "IERC20",
                      "nameLocations": [
                        "6045:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1365,
                      "src": "6045:6:13"
                    },
                    "referencedDeclaration": 1365,
                    "src": "6045:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1365",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6044:15:13"
            },
            "returnParameters": {
              "id": 4051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6068:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4064,
            "nodeType": "FunctionDefinition",
            "src": "6883:143:13",
            "nodes": [],
            "documentation": {
              "id": 4053,
              "nodeType": "StructuredDocumentation",
              "src": "6073:807:13",
              "text": " @dev  Gets the next available validator details, ordered by operators with the least amount of active validators. There may be less available validators then the provided _numNewValidators amount, in that case the function will return an array of length equal to _numNewValidators but all indexes after the second return value; foundValidators, will be 0x0 values\n @param _numNewValidators The number of new validators to get details for.\n @return An array of ValidatorDetails and the length of the array of non-zero validator details\n @notice This method tries to return enough validator details to equal the provided _numNewValidators, but if there aren't enough validator details to find, it will simply return what it found, and the caller will need to check for empty values."
            },
            "functionSelector": "023e8ecb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNextValidatorDetails",
            "nameLocation": "6892:23:13",
            "parameters": {
              "id": 4056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4055,
                  "mutability": "mutable",
                  "name": "_numNewValidators",
                  "nameLocation": "6929:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4064,
                  "src": "6921:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6921:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6915:35:13"
            },
            "returnParameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4064,
                  "src": "6974:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4058,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4057,
                        "name": "ValidatorDetails",
                        "nameLocations": [
                          "6974:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3926,
                        "src": "6974:16:13"
                      },
                      "referencedDeclaration": 3926,
                      "src": "6974:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidatorDetails_$3926_storage_ptr",
                        "typeString": "struct INodeOperatorRegistry.ValidatorDetails"
                      }
                    },
                    "id": 4059,
                    "nodeType": "ArrayTypeName",
                    "src": "6974:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_storage_$dyn_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4062,
                  "mutability": "mutable",
                  "name": "foundValidators",
                  "nameLocation": "7009:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4064,
                  "src": "7001:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7001:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6973:52:13"
            },
            "scope": 4222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4075,
            "nodeType": "FunctionDefinition",
            "src": "7566:134:13",
            "nodes": [],
            "documentation": {
              "id": 4065,
              "nodeType": "StructuredDocumentation",
              "src": "7030:533:13",
              "text": " @dev  Allows the DepositManager to move provided _pubKeys from the pending validator details arrays into the active validator details array. It also returns the validator details, so that the DepositManager can pass the signature along to the ETH2 deposit contract.\n @param _pubKeys Array of public keys to use for validator setup.\n @return validatorDetails The associated validator details for the given public keys\n @notice This method will be called when the DepositManager is setting up new validators."
            },
            "functionSelector": "c3953502",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "usePubKeysForValidatorSetup",
            "nameLocation": "7575:27:13",
            "parameters": {
              "id": 4069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4068,
                  "mutability": "mutable",
                  "name": "_pubKeys",
                  "nameLocation": "7625:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "7608:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4066,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "7608:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4067,
                    "nodeType": "ArrayTypeName",
                    "src": "7608:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7602:35:13"
            },
            "returnParameters": {
              "id": 4074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4073,
                  "mutability": "mutable",
                  "name": "validatorDetails",
                  "nameLocation": "7682:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "7656:42:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4071,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4070,
                        "name": "ValidatorDetails",
                        "nameLocations": [
                          "7656:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3926,
                        "src": "7656:16:13"
                      },
                      "referencedDeclaration": 3926,
                      "src": "7656:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidatorDetails_$3926_storage_ptr",
                        "typeString": "struct INodeOperatorRegistry.ValidatorDetails"
                      }
                    },
                    "id": 4072,
                    "nodeType": "ArrayTypeName",
                    "src": "7656:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_storage_$dyn_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7655:44:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4083,
            "nodeType": "FunctionDefinition",
            "src": "7969:96:13",
            "nodes": [],
            "documentation": {
              "id": 4076,
              "nodeType": "StructuredDocumentation",
              "src": "7744:222:13",
              "text": " @dev  Adds new validator details to the registry.\n/**\n @dev  Callable by node operator's to add their validator details to the setup queue\n @param _validatorDetails Array of ValidatorDetails to add."
            },
            "functionSelector": "60ec5216",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addNewValidatorDetails",
            "nameLocation": "7978:22:13",
            "parameters": {
              "id": 4081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4080,
                  "mutability": "mutable",
                  "name": "_validatorDetails",
                  "nameLocation": "8034:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "8006:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4078,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4077,
                        "name": "ValidatorDetails",
                        "nameLocations": [
                          "8006:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3926,
                        "src": "8006:16:13"
                      },
                      "referencedDeclaration": 3926,
                      "src": "8006:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidatorDetails_$3926_storage_ptr",
                        "typeString": "struct INodeOperatorRegistry.ValidatorDetails"
                      }
                    },
                    "id": 4079,
                    "nodeType": "ArrayTypeName",
                    "src": "8006:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_storage_$dyn_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8000:55:13"
            },
            "returnParameters": {
              "id": 4082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8064:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4093,
            "nodeType": "FunctionDefinition",
            "src": "8429:119:13",
            "nodes": [],
            "documentation": {
              "id": 4084,
              "nodeType": "StructuredDocumentation",
              "src": "8115:311:13",
              "text": " @dev  Adds a new operator to the registry.\n @param _name Name of the operator.\n @param _operatorAddress Address of the operator.\n @param _rewardAddress Address of the reward recipient for this operator.\n @notice Throws if an operator already exists with the given _operatorAddress"
            },
            "functionSelector": "54741d6d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addOperator",
            "nameLocation": "8438:11:13",
            "parameters": {
              "id": 4091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4086,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8471:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "8455:21:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4085,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8455:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4088,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "8490:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "8482:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8482:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4090,
                  "mutability": "mutable",
                  "name": "_rewardAddress",
                  "nameLocation": "8520:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "8512:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8512:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8449:89:13"
            },
            "returnParameters": {
              "id": 4092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8547:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4099,
            "nodeType": "FunctionDefinition",
            "src": "8765:59:13",
            "nodes": [],
            "documentation": {
              "id": 4094,
              "nodeType": "StructuredDocumentation",
              "src": "8552:210:13",
              "text": " @dev  Enables an operator in the registry.\n @param _operatorAddress Address of the operator to enable.\n @notice Throws NoOperatorFound if the operator address is not found in the registry"
            },
            "functionSelector": "dd307b99",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enableOperator",
            "nameLocation": "8774:14:13",
            "parameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "8797:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4099,
                  "src": "8789:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8789:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8788:26:13"
            },
            "returnParameters": {
              "id": 4098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8823:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4105,
            "nodeType": "FunctionDefinition",
            "src": "9043:60:13",
            "nodes": [],
            "documentation": {
              "id": 4100,
              "nodeType": "StructuredDocumentation",
              "src": "8828:212:13",
              "text": " @dev  Disables an operator in the registry.\n @param _operatorAddress Address of the operator to disable.\n @notice Throws NoOperatorFound if the operator address is not found in the registry"
            },
            "functionSelector": "f56408ed",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disableOperator",
            "nameLocation": "9052:15:13",
            "parameters": {
              "id": 4103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4102,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "9076:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4105,
                  "src": "9068:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9068:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9067:26:13"
            },
            "returnParameters": {
              "id": 4104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9102:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4113,
            "nodeType": "FunctionDefinition",
            "src": "9406:118:13",
            "nodes": [],
            "documentation": {
              "id": 4106,
              "nodeType": "StructuredDocumentation",
              "src": "9107:296:13",
              "text": " @dev  Updates the controlling address of an operator in the registry.\n @param _operatorAddress Current address of the operator.\n @param _newOperatorAddress New address of the operator.\n @notice Throws NoOperatorFound if the operator address is not found in the registry"
            },
            "functionSelector": "32f73258",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorControllingAddress",
            "nameLocation": "9415:32:13",
            "parameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4108,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "9461:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4113,
                  "src": "9453:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9453:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4110,
                  "mutability": "mutable",
                  "name": "_newOperatorAddress",
                  "nameLocation": "9491:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4113,
                  "src": "9483:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9483:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9447:67:13"
            },
            "returnParameters": {
              "id": 4112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9523:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4121,
            "nodeType": "FunctionDefinition",
            "src": "9830:111:13",
            "nodes": [],
            "documentation": {
              "id": 4114,
              "nodeType": "StructuredDocumentation",
              "src": "9528:299:13",
              "text": " @dev  Updates the reward address of an operator in the registry.\n @param _operatorAddress Address of the operator to update.\n @param _newRewardAddress New reward address for the operator.\n @notice Throws NoOperatorFound if the operator address is not found in the registry"
            },
            "functionSelector": "e8f28a6c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorRewardAddress",
            "nameLocation": "9839:27:13",
            "parameters": {
              "id": 4119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4116,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "9880:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4121,
                  "src": "9872:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9872:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4118,
                  "mutability": "mutable",
                  "name": "_newRewardAddress",
                  "nameLocation": "9910:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4121,
                  "src": "9902:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9902:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9866:65:13"
            },
            "returnParameters": {
              "id": 4120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9940:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4129,
            "nodeType": "FunctionDefinition",
            "src": "10220:98:13",
            "nodes": [],
            "documentation": {
              "id": 4122,
              "nodeType": "StructuredDocumentation",
              "src": "9945:272:13",
              "text": " @dev  Updates the name of an operator in the registry\n @param _operatorAddress The address of the operator to update\n @param _name The new name for the operator\n @notice Throws NoOperatorFound if the operator address is not found in the registry"
            },
            "functionSelector": "9f5db69c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOperatorName",
            "nameLocation": "10229:18:13",
            "parameters": {
              "id": 4127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4124,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "10261:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4129,
                  "src": "10253:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10253:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4126,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "10299:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4129,
                  "src": "10283:21:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10283:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10247:61:13"
            },
            "returnParameters": {
              "id": 4128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10317:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4136,
            "nodeType": "FunctionDefinition",
            "src": "10755:69:13",
            "nodes": [],
            "documentation": {
              "id": 4130,
              "nodeType": "StructuredDocumentation",
              "src": "10322:430:13",
              "text": " @dev  Allows the PLATFORM_ADMIN to delete validators that are pending. This is likely to be called via an admin if a public key fails the front-running checks\n @notice Throws InvalidArrayLengthOfZero if the length of _pubKeys is 0\n @notice Throws NoPubKeyFound if any of the provided pubKeys is not found in the pending validators set\n @param _pubKeys The public keys of the pending validators to delete"
            },
            "functionSelector": "242eba0e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deletePendingValidators",
            "nameLocation": "10764:23:13",
            "parameters": {
              "id": 4134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4133,
                  "mutability": "mutable",
                  "name": "_pubKeys",
                  "nameLocation": "10805:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4136,
                  "src": "10788:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4131,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "10788:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4132,
                    "nodeType": "ArrayTypeName",
                    "src": "10788:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10787:27:13"
            },
            "returnParameters": {
              "id": 4135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10823:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4143,
            "nodeType": "FunctionDefinition",
            "src": "11239:68:13",
            "nodes": [],
            "documentation": {
              "id": 4137,
              "nodeType": "StructuredDocumentation",
              "src": "10828:408:13",
              "text": " @dev  Allows the PLATFORM_ADMIN to delete validator public keys that have been used to setup a validator and that validator has now exited\n @notice Throws NoPubKeyFound if any of the provided pubKeys is not found in the active validators set\n @notice Throws InvalidArrayLengthOfZero if the length of _pubKeys is 0\n @param _pubKeys The public keys of the active validators to delete"
            },
            "functionSelector": "eda74e71",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteActiveValidators",
            "nameLocation": "11248:22:13",
            "parameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "mutability": "mutable",
                  "name": "_pubKeys",
                  "nameLocation": "11288:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4143,
                  "src": "11271:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4138,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "11271:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 4139,
                    "nodeType": "ArrayTypeName",
                    "src": "11271:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11270:27:13"
            },
            "returnParameters": {
              "id": 4142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11306:0:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4150,
            "nodeType": "FunctionDefinition",
            "src": "11391:73:13",
            "nodes": [],
            "documentation": {
              "id": 4144,
              "nodeType": "StructuredDocumentation",
              "src": "11311:77:13",
              "text": " @dev  Returns the address of the AccessControlManager contract"
            },
            "functionSelector": "902340a1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "AccessControlManager",
            "nameLocation": "11400:20:13",
            "parameters": {
              "id": 4145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11420:2:13"
            },
            "returnParameters": {
              "id": 4149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "11441:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAccessControlManager_$3860",
                    "typeString": "contract IAccessControlManager"
                  },
                  "typeName": {
                    "id": 4147,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4146,
                      "name": "IAccessControlManager",
                      "nameLocations": [
                        "11441:21:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3860,
                      "src": "11441:21:13"
                    },
                    "referencedDeclaration": 3860,
                    "src": "11441:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccessControlManager_$3860",
                      "typeString": "contract IAccessControlManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11440:23:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4163,
            "nodeType": "FunctionDefinition",
            "src": "11933:191:13",
            "nodes": [],
            "documentation": {
              "id": 4151,
              "nodeType": "StructuredDocumentation",
              "src": "11468:462:13",
              "text": " @dev  Returns the operator details for a given operator address\n @notice Throws NoOperatorFound if the operator address is not found in the registry\n @param _operatorAddress The address of the operator to retrieve\n @return operator The operator details, including name, reward address, and enabled status\n @return totalValidatorDetails The total amount of validator details for an operator\n @return operatorId The operator's Id"
            },
            "functionSelector": "5865c60c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOperator",
            "nameLocation": "11942:11:13",
            "parameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4153,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "11967:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4163,
                  "src": "11959:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11959:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11953:34:13"
            },
            "returnParameters": {
              "id": 4162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4157,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12046:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4163,
                  "src": "12030:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Operator_$3937_memory_ptr",
                    "typeString": "struct INodeOperatorRegistry.Operator"
                  },
                  "typeName": {
                    "id": 4156,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4155,
                      "name": "Operator",
                      "nameLocations": [
                        "12030:8:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3937,
                      "src": "12030:8:13"
                    },
                    "referencedDeclaration": 3937,
                    "src": "12030:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Operator_$3937_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.Operator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4159,
                  "mutability": "mutable",
                  "name": "totalValidatorDetails",
                  "nameLocation": "12070:21:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4163,
                  "src": "12062:29:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4158,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12062:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4161,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "12107:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4163,
                  "src": "12099:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4160,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12099:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12022:101:13"
            },
            "scope": 4222,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4173,
            "nodeType": "FunctionDefinition",
            "src": "12489:124:13",
            "nodes": [],
            "documentation": {
              "id": 4164,
              "nodeType": "StructuredDocumentation",
              "src": "12128:358:13",
              "text": " @dev  Returns the pending validator details for a given operator address\n @notice Throws NoOperatorFound if the operator address is not found in the registry\n @param _operatorAddress The address of the operator to retrieve pending validator details for\n @return validatorDetails The pending validator details for the given operator"
            },
            "functionSelector": "422544d2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorsPendingValidatorDetails",
            "nameLocation": "12498:35:13",
            "parameters": {
              "id": 4167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4166,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "12547:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4173,
                  "src": "12539:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12539:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12533:34:13"
            },
            "returnParameters": {
              "id": 4172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4173,
                  "src": "12586:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4169,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4168,
                        "name": "ValidatorDetails",
                        "nameLocations": [
                          "12586:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3926,
                        "src": "12586:16:13"
                      },
                      "referencedDeclaration": 3926,
                      "src": "12586:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidatorDetails_$3926_storage_ptr",
                        "typeString": "struct INodeOperatorRegistry.ValidatorDetails"
                      }
                    },
                    "id": 4170,
                    "nodeType": "ArrayTypeName",
                    "src": "12586:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_storage_$dyn_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12585:27:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4183,
            "nodeType": "FunctionDefinition",
            "src": "12975:140:13",
            "nodes": [],
            "documentation": {
              "id": 4174,
              "nodeType": "StructuredDocumentation",
              "src": "12617:355:13",
              "text": " @dev  Returns the active validator details for a given operator address\n @notice Throws NoOperatorFound if the operator address is not found in the registry\n @param _operatorAddress The address of the operator to retrieve active validator details for\n @return validatorDetails The active validator details for the given operator"
            },
            "functionSelector": "7ea790ee",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorsActiveValidatorDetails",
            "nameLocation": "12984:34:13",
            "parameters": {
              "id": 4177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4176,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "13032:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4183,
                  "src": "13024:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13024:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13018:34:13"
            },
            "returnParameters": {
              "id": 4182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4181,
                  "mutability": "mutable",
                  "name": "validatorDetails",
                  "nameLocation": "13097:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4183,
                  "src": "13071:42:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4179,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4178,
                        "name": "ValidatorDetails",
                        "nameLocations": [
                          "13071:16:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3926,
                        "src": "13071:16:13"
                      },
                      "referencedDeclaration": 3926,
                      "src": "13071:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidatorDetails_$3926_storage_ptr",
                        "typeString": "struct INodeOperatorRegistry.ValidatorDetails"
                      }
                    },
                    "id": 4180,
                    "nodeType": "ArrayTypeName",
                    "src": "13071:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ValidatorDetails_$3926_storage_$dyn_storage_ptr",
                      "typeString": "struct INodeOperatorRegistry.ValidatorDetails[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13070:44:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4193,
            "nodeType": "FunctionDefinition",
            "src": "13473:135:13",
            "nodes": [],
            "documentation": {
              "id": 4184,
              "nodeType": "StructuredDocumentation",
              "src": "13119:351:13",
              "text": " @dev  Returns the reward details for a given operator Id, this method is used in the swETH contract when paying swETH rewards\n @param _operatorId The operator Id to get the reward details for\n @return rewardAddress The reward address of the operator\n @return activeValidators The amount of active validators for the operator"
            },
            "functionSelector": "519d97fe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardDetailsForOperatorId",
            "nameLocation": "13482:29:13",
            "parameters": {
              "id": 4187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4186,
                  "mutability": "mutable",
                  "name": "_operatorId",
                  "nameLocation": "13525:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4193,
                  "src": "13517:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4185,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13517:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13511:29:13"
            },
            "returnParameters": {
              "id": 4192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4189,
                  "mutability": "mutable",
                  "name": "rewardAddress",
                  "nameLocation": "13567:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4193,
                  "src": "13559:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13559:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4191,
                  "mutability": "mutable",
                  "name": "activeValidators",
                  "nameLocation": "13590:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4193,
                  "src": "13582:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13582:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13558:49:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4199,
            "nodeType": "FunctionDefinition",
            "src": "13683:51:13",
            "nodes": [],
            "documentation": {
              "id": 4194,
              "nodeType": "StructuredDocumentation",
              "src": "13612:68:13",
              "text": " @dev  Returns the number of operators in the registry"
            },
            "functionSelector": "bd820688",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numOperators",
            "nameLocation": "13692:12:13",
            "parameters": {
              "id": 4195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13704:2:13"
            },
            "returnParameters": {
              "id": 4198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4199,
                  "src": "13725:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4196,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13725:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13724:9:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4205,
            "nodeType": "FunctionDefinition",
            "src": "13822:59:13",
            "nodes": [],
            "documentation": {
              "id": 4200,
              "nodeType": "StructuredDocumentation",
              "src": "13738:81:13",
              "text": " @dev  Returns the amount of pending validator keys in the registry"
            },
            "functionSelector": "e3b2918b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numPendingValidators",
            "nameLocation": "13831:20:13",
            "parameters": {
              "id": 4201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13851:2:13"
            },
            "returnParameters": {
              "id": 4204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4205,
                  "src": "13872:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13872:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13871:9:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4213,
            "nodeType": "FunctionDefinition",
            "src": "14196:99:13",
            "nodes": [],
            "documentation": {
              "id": 4206,
              "nodeType": "StructuredDocumentation",
              "src": "13885:308:13",
              "text": " @dev  Returns the operator ID for a given operator address\n @notice Throws NoOperatorFound if the operator address is not found in the registry\n @param _operator The address of the operator to retrieve the operator ID for\n @return _operatorId The operator ID for the given operator"
            },
            "functionSelector": "f75f35b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorIdForAddress",
            "nameLocation": "14205:23:13",
            "parameters": {
              "id": 4209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4208,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "14242:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4213,
                  "src": "14234:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14234:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14228:27:13"
            },
            "returnParameters": {
              "id": 4212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4211,
                  "mutability": "mutable",
                  "name": "_operatorId",
                  "nameLocation": "14282:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4213,
                  "src": "14274:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4210,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14274:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14273:21:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4221,
            "nodeType": "FunctionDefinition",
            "src": "14509:90:13",
            "nodes": [],
            "documentation": {
              "id": 4214,
              "nodeType": "StructuredDocumentation",
              "src": "14299:207:13",
              "text": " @dev Returns the `operatorId` associated with the given `pubKey`.\n @param pubKey  The public key to lookup the `operatorId` for.\n @notice Returns 0 if no operatorId controls the pubKey"
            },
            "functionSelector": "02f56f04",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorIdForPubKey",
            "nameLocation": "14518:22:13",
            "parameters": {
              "id": 4217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4216,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "14561:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4221,
                  "src": "14546:21:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4215,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14546:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14540:31:13"
            },
            "returnParameters": {
              "id": 4220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4221,
                  "src": "14590:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4218,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14590:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14589:9:13"
            },
            "scope": 4222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3920,
              "name": "IPoRAddresses",
              "nameLocations": [
                "455:13:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4947,
              "src": "455:13:13"
            },
            "id": 3921,
            "nodeType": "InheritanceSpecifier",
            "src": "455:13:13"
          }
        ],
        "canonicalName": "INodeOperatorRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3919,
          "nodeType": "StructuredDocumentation",
          "src": "277:142:13",
          "text": " @title INodeOperatorRegistry\n @author https://github.com/max-taylor\n @notice Interface for the Node Operator Registry contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          4222,
          4947
        ],
        "name": "INodeOperatorRegistry",
        "nameLocation": "430:21:13",
        "scope": 4223,
        "usedErrors": [
          3986,
          3991,
          3994,
          3997,
          4000,
          4003,
          4010,
          4013,
          4018,
          4021,
          4026,
          4031,
          4036,
          4039,
          4042,
          4045
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 13
}