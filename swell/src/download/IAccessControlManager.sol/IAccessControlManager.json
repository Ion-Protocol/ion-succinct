{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyPaused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyUnpaused",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newPausedStatus",
          "type": "bool"
        }
      ],
      "name": "BotMethodsPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newPausedStatus",
          "type": "bool"
        }
      ],
      "name": "CoreMethodsPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newPausedStatus",
          "type": "bool"
        }
      ],
      "name": "OperatorMethodsPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedDepositManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedNodeOperatorRegistry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedSwETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedSwellTreasury",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newPausedStatus",
          "type": "bool"
        }
      ],
      "name": "WithdrawalsPause",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DepositManager",
      "outputs": [
        {
          "internalType": "contract IDepositManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NodeOperatorRegistry",
      "outputs": [
        {
          "internalType": "contract INodeOperatorRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PLATFORM_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwellTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "botMethodsPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coreMethodsPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorMethodsPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseBotMethods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseCoreMethods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseOperatorMethods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IDepositManager",
          "name": "_depositManager",
          "type": "address"
        }
      ],
      "name": "setDepositManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INodeOperatorRegistry",
          "name": "_NodeOperatorRegistry",
          "type": "address"
        }
      ],
      "name": "setNodeOperatorRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IswETH",
          "name": "_swETH",
          "type": "address"
        }
      ],
      "name": "setSwETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swellTreasury",
          "type": "address"
        }
      ],
      "name": "setSwellTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swETH",
      "outputs": [
        {
          "internalType": "contract IswETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseBotMethods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseCoreMethods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseOperatorMethods",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalsPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DepositManager()": "f712312c",
    "NodeOperatorRegistry()": "9ffaaa3b",
    "PLATFORM_ADMIN()": "c1d0a7d8",
    "SwellTreasury()": "96e9da55",
    "botMethodsPaused()": "d19a8502",
    "checkRole(bytes32,address)": "12d9a6ad",
    "coreMethodsPaused()": "a3e7dfd3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "operatorMethodsPaused()": "5a8ee785",
    "pauseBotMethods()": "6dbf7ce7",
    "pauseCoreMethods()": "d63fd2dc",
    "pauseOperatorMethods()": "0f318c8b",
    "pauseWithdrawals()": "56bb54a7",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setDepositManager(address)": "228d71a9",
    "setNodeOperatorRegistry(address)": "d3557bd0",
    "setSwETH(address)": "083ce638",
    "setSwellTreasury(address)": "715f666b",
    "swETH()": "18a66953",
    "unpauseBotMethods()": "ce202043",
    "unpauseCoreMethods()": "222b4717",
    "unpauseOperatorMethods()": "562e9a0a",
    "unpauseWithdrawals()": "e4c4be58",
    "withdrawERC20(address)": "f4f3b200",
    "withdrawalsPaused()": "e9f2838e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyUnpaused\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newPausedStatus\",\"type\":\"bool\"}],\"name\":\"BotMethodsPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newPausedStatus\",\"type\":\"bool\"}],\"name\":\"CoreMethodsPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newPausedStatus\",\"type\":\"bool\"}],\"name\":\"OperatorMethodsPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdatedDepositManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdatedNodeOperatorRegistry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdatedSwETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdatedSwellTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newPausedStatus\",\"type\":\"bool\"}],\"name\":\"WithdrawalsPause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DepositManager\",\"outputs\":[{\"internalType\":\"contract IDepositManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NodeOperatorRegistry\",\"outputs\":[{\"internalType\":\"contract INodeOperatorRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLATFORM_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwellTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"botMethodsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkRole\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreMethodsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorMethodsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseBotMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseCoreMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseOperatorMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDepositManager\",\"name\":\"_depositManager\",\"type\":\"address\"}],\"name\":\"setDepositManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INodeOperatorRegistry\",\"name\":\"_NodeOperatorRegistry\",\"type\":\"address\"}],\"name\":\"setNodeOperatorRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IswETH\",\"name\":\"_swETH\",\"type\":\"address\"}],\"name\":\"setSwETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swellTreasury\",\"type\":\"address\"}],\"name\":\"setSwellTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swETH\",\"outputs\":[{\"internalType\":\"contract IswETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseBotMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseCoreMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseOperatorMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/max-taylor \",\"details\":\"The interface for the Access Control Manager, which manages roles and permissions for contracts within the Swell ecosystem\",\"errors\":{\"AlreadyPaused()\":[{\"details\":\"Error thrown when attempting to pause an already-paused boolean\"}],\"AlreadyUnpaused()\":[{\"details\":\"Error thrown when attempting to unpause an already-unpaused boolean\"}]},\"events\":{\"BotMethodsPause(bool)\":{\"details\":\"Emitted when bot methods functionality is paused or unpaused.\",\"params\":{\"newPausedStatus\":\"The new paused status.\"}},\"CoreMethodsPause(bool)\":{\"details\":\"Emitted when core methods functionality is paused or unpaused.\",\"params\":{\"newPausedStatus\":\"The new paused status.\"}},\"OperatorMethodsPause(bool)\":{\"details\":\"Emitted when operator methods functionality is paused or unpaused.\",\"params\":{\"newPausedStatus\":\"The new paused status.\"}},\"UpdatedDepositManager(address,address)\":{\"details\":\"Emitted when a new DepositManager contract address is set.\",\"params\":{\"newAddress\":\"The new DepositManager contract address.\",\"oldAddress\":\"The old DepositManager contract address.\"}},\"UpdatedNodeOperatorRegistry(address,address)\":{\"details\":\"Emitted when a new NodeOperatorRegistry contract address is set.\",\"params\":{\"newAddress\":\"The new NodeOperatorRegistry contract address.\",\"oldAddress\":\"The old NodeOperatorRegistry contract address.\"}},\"UpdatedSwETH(address,address)\":{\"details\":\"Emitted when a new SwETH contract address is set.\",\"params\":{\"newAddress\":\"The new SwETH contract address.\",\"oldAddress\":\"The old SwETH contract address.\"}},\"UpdatedSwellTreasury(address,address)\":{\"details\":\"Emitted when a new SwellTreasury contract address is set.\",\"params\":{\"newAddress\":\"The new SwellTreasury contract address.\",\"oldAddress\":\"The old SwellTreasury contract address.\"}},\"WithdrawalsPause(bool)\":{\"details\":\"Emitted when withdrawals functionality is paused or unpaused.\",\"params\":{\"newPausedStatus\":\"The new paused status.\"}}},\"kind\":\"dev\",\"methods\":{\"DepositManager()\":{\"details\":\"Returns the Deposit Manager contract.\",\"returns\":{\"_0\":\"The Deposit Manager contract.\"}},\"NodeOperatorRegistry()\":{\"details\":\"Returns the Node Operator Registry contract.\",\"returns\":{\"_0\":\"The Node Operator Registry contract.\"}},\"PLATFORM_ADMIN()\":{\"details\":\"Returns the PLATFORM_ADMIN role.\",\"returns\":{\"_0\":\"The bytes32 representation of the PLATFORM_ADMIN role.\"}},\"SwellTreasury()\":{\"details\":\"Returns the address of the Swell Treasury contract.\",\"returns\":{\"_0\":\"The address of the Swell Treasury contract.\"}},\"botMethodsPaused()\":{\"details\":\"Returns true if bot methods are currently paused.\",\"returns\":{\"_0\":\"Whether bot methods are paused.\"}},\"checkRole(bytes32,address)\":{\"details\":\"Pass-through method to call the _checkRole method on the inherited access control contract. This method is to be used by external contracts that are using this centralised access control manager, this ensures that if the check fails it reverts with the correct access control error message\",\"params\":{\"account\":\"The account to check for\",\"role\":\"The role to check\"}},\"coreMethodsPaused()\":{\"details\":\"Returns true if core methods are currently paused.\",\"returns\":{\"_0\":\"Whether core methods are paused.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"operatorMethodsPaused()\":{\"details\":\"Returns true if operator methods are currently paused.\",\"returns\":{\"_0\":\"Whether operator methods are paused.\"}},\"pauseBotMethods()\":{\"details\":\"Pauses the bot specific methods, only callable by the PLATFORM_ADMIN\"},\"pauseCoreMethods()\":{\"details\":\"Pauses the core methods of the Swell ecosystem, only callable by the PLATFORM_ADMIN\"},\"pauseOperatorMethods()\":{\"details\":\"Pauses the operator methods in the NO registry contract, only callable by the PLATFORM_ADMIN\"},\"pauseWithdrawals()\":{\"details\":\"Pauses the withdrawals of the Swell ecosystem, only callable by the PLATFORM_ADMIN\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setDepositManager(address)\":{\"details\":\"This function is only callable by the `PLATFORM_ADMIN` role.\",\"params\":{\"_depositManager\":\"The address of the `DepositManager` contract.\"}},\"setNodeOperatorRegistry(address)\":{\"details\":\"This function is only callable by the `PLATFORM_ADMIN` role.\",\"params\":{\"_NodeOperatorRegistry\":\"The address of the `NodeOperatorRegistry` contract.\"}},\"setSwETH(address)\":{\"details\":\"This function is only callable by the `PLATFORM_ADMIN` role.\",\"params\":{\"_swETH\":\"The address of the `swETH` contract.\"}},\"setSwellTreasury(address)\":{\"details\":\"This function is only callable by the `PLATFORM_ADMIN` role.\",\"params\":{\"_swellTreasury\":\"The new address of the `SwellTreasury` contract.\"}},\"swETH()\":{\"details\":\"Returns the Swell ETH contract.\",\"returns\":{\"_0\":\"The Swell ETH contract.\"}},\"unpauseBotMethods()\":{\"details\":\"Unpauses the bot specific methods, only callable by the PLATFORM_ADMIN\"},\"unpauseCoreMethods()\":{\"details\":\"Unpauses the core methods of the Swell ecosystem, only callable by the PLATFORM_ADMIN\"},\"unpauseOperatorMethods()\":{\"details\":\"Unpauses the operator methods in the NO registry contract, only callable by the PLATFORM_ADMIN\"},\"unpauseWithdrawals()\":{\"details\":\"Unpauses the withdrawals of the Swell ecosystem, only callable by the PLATFORM_ADMIN\"},\"withdrawERC20(address)\":{\"details\":\"This method withdraws contract's _token balance to a platform admin\",\"params\":{\"_token\":\"The ERC20 token to withdraw from the contract\"}},\"withdrawalsPaused()\":{\"details\":\"Returns true if withdrawals are currently paused.! Note that this is completely unused in the current implementation and is a placeholder that will be used once the withdrawals are implemented.\",\"returns\":{\"_0\":\"Whether withdrawals are paused.\"}}},\"title\":\"IAccessControlManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDepositManager(address)\":{\"notice\":\"Sets the `DepositManager` address to `_depositManager`.\"},\"setNodeOperatorRegistry(address)\":{\"notice\":\"Sets the `NodeOperatorRegistry` address to `_NodeOperatorRegistry`.\"},\"setSwETH(address)\":{\"notice\":\"Sets the `swETH` address to `_swETH`.\"},\"setSwellTreasury(address)\":{\"notice\":\"Sets the `SwellTreasury` address to `_swellTreasury`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol\":\"IAccessControlManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol\":{\"keccak256\":\"0x10561da35ef938e5039a72588620ca6df9187cd930747d261f0ef1ef45a83d8d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c04d422b0c64886344e45fd04001556fb800711e08d4068c9dff576f086024b3\",\"dweb:/ipfs/QmcPDVzFuP2FS8AkoYDyhMGrY6tdRdfMf5pj763s8J4vji\"]},\"out/NodeOperatorRegistry/contracts/interfaces/IDepositManager.sol\":{\"keccak256\":\"0x55d2a3297326c2e07bf64326fb185146b1fdb0edf9b848a70feea25cf576eff3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d2028d72c1c5e920363fdbc19edf4098d24fcd78f30f560bd70f940421b3df46\",\"dweb:/ipfs/QmNvh5aP6N4FxvNVw1RBqTGou6LX27S6uDc5bFpy3K6WwV\"]},\"out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol\":{\"keccak256\":\"0x25c6dac581ce443f8ed3f7cb4c0e452a6161ed8f98c74bb28f47ed698d2c5a1f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18ac4625aa1198b80639e09925f0f48733df4fe42d78e033b2810221adbfdcb8\",\"dweb:/ipfs/QmQnhokjGMFN3EjqvnMFetHJPVWKtPtScZQLyduuHRLQ5s\"]},\"out/NodeOperatorRegistry/contracts/interfaces/IswETH.sol\":{\"keccak256\":\"0x6191d18854166fa8e9b0e32f18e8671f41026ddf4679377c48963c8c03837089\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f4d257d6f352aa712c152406178f1316a374ee685f51f24e182b99ed120ce328\",\"dweb:/ipfs/Qmbu1WP23aAaijW2LJFWVCzFst7hAbwnQ7U5mwY4oKas8r\"]},\"out/NodeOperatorRegistry/contracts/vendors/IPoRAddresses.sol\":{\"keccak256\":\"0xb63361087cbd29ead80f4d07b0751c780632a09786301aae9a2229470d96fd39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a107a9ed62725cf6171ba15756c85cb9320788bf1bfa3bb97eb2f670644b3479\",\"dweb:/ipfs/QmXaLN7EK6Vrxo3n2ZLLHa7XzMSaE4LzspNBWonJphZmUE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyUnpaused"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "newPausedStatus",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BotMethodsPause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "newPausedStatus",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CoreMethodsPause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "newPausedStatus",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorMethodsPause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedDepositManager",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedNodeOperatorRegistry",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedSwETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedSwellTreasury",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "newPausedStatus",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalsPause",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "DepositManager",
          "outputs": [
            {
              "internalType": "contract IDepositManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "NodeOperatorRegistry",
          "outputs": [
            {
              "internalType": "contract INodeOperatorRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "PLATFORM_ADMIN",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "SwellTreasury",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "botMethodsPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "coreMethodsPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorMethodsPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseBotMethods"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseCoreMethods"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseOperatorMethods"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "contract IDepositManager",
              "name": "_depositManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDepositManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract INodeOperatorRegistry",
              "name": "_NodeOperatorRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNodeOperatorRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "contract IswETH",
              "name": "_swETH",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swellTreasury",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwellTreasury"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swETH",
          "outputs": [
            {
              "internalType": "contract IswETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseBotMethods"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseCoreMethods"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseOperatorMethods"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpauseWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawalsPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DepositManager()": {
            "details": "Returns the Deposit Manager contract.",
            "returns": {
              "_0": "The Deposit Manager contract."
            }
          },
          "NodeOperatorRegistry()": {
            "details": "Returns the Node Operator Registry contract.",
            "returns": {
              "_0": "The Node Operator Registry contract."
            }
          },
          "PLATFORM_ADMIN()": {
            "details": "Returns the PLATFORM_ADMIN role.",
            "returns": {
              "_0": "The bytes32 representation of the PLATFORM_ADMIN role."
            }
          },
          "SwellTreasury()": {
            "details": "Returns the address of the Swell Treasury contract.",
            "returns": {
              "_0": "The address of the Swell Treasury contract."
            }
          },
          "botMethodsPaused()": {
            "details": "Returns true if bot methods are currently paused.",
            "returns": {
              "_0": "Whether bot methods are paused."
            }
          },
          "checkRole(bytes32,address)": {
            "details": "Pass-through method to call the _checkRole method on the inherited access control contract. This method is to be used by external contracts that are using this centralised access control manager, this ensures that if the check fails it reverts with the correct access control error message",
            "params": {
              "account": "The account to check for",
              "role": "The role to check"
            }
          },
          "coreMethodsPaused()": {
            "details": "Returns true if core methods are currently paused.",
            "returns": {
              "_0": "Whether core methods are paused."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "operatorMethodsPaused()": {
            "details": "Returns true if operator methods are currently paused.",
            "returns": {
              "_0": "Whether operator methods are paused."
            }
          },
          "pauseBotMethods()": {
            "details": "Pauses the bot specific methods, only callable by the PLATFORM_ADMIN"
          },
          "pauseCoreMethods()": {
            "details": "Pauses the core methods of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
          },
          "pauseOperatorMethods()": {
            "details": "Pauses the operator methods in the NO registry contract, only callable by the PLATFORM_ADMIN"
          },
          "pauseWithdrawals()": {
            "details": "Pauses the withdrawals of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "setDepositManager(address)": {
            "details": "This function is only callable by the `PLATFORM_ADMIN` role.",
            "params": {
              "_depositManager": "The address of the `DepositManager` contract."
            }
          },
          "setNodeOperatorRegistry(address)": {
            "details": "This function is only callable by the `PLATFORM_ADMIN` role.",
            "params": {
              "_NodeOperatorRegistry": "The address of the `NodeOperatorRegistry` contract."
            }
          },
          "setSwETH(address)": {
            "details": "This function is only callable by the `PLATFORM_ADMIN` role.",
            "params": {
              "_swETH": "The address of the `swETH` contract."
            }
          },
          "setSwellTreasury(address)": {
            "details": "This function is only callable by the `PLATFORM_ADMIN` role.",
            "params": {
              "_swellTreasury": "The new address of the `SwellTreasury` contract."
            }
          },
          "swETH()": {
            "details": "Returns the Swell ETH contract.",
            "returns": {
              "_0": "The Swell ETH contract."
            }
          },
          "unpauseBotMethods()": {
            "details": "Unpauses the bot specific methods, only callable by the PLATFORM_ADMIN"
          },
          "unpauseCoreMethods()": {
            "details": "Unpauses the core methods of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
          },
          "unpauseOperatorMethods()": {
            "details": "Unpauses the operator methods in the NO registry contract, only callable by the PLATFORM_ADMIN"
          },
          "unpauseWithdrawals()": {
            "details": "Unpauses the withdrawals of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
          },
          "withdrawERC20(address)": {
            "details": "This method withdraws contract's _token balance to a platform admin",
            "params": {
              "_token": "The ERC20 token to withdraw from the contract"
            }
          },
          "withdrawalsPaused()": {
            "details": "Returns true if withdrawals are currently paused.! Note that this is completely unused in the current implementation and is a placeholder that will be used once the withdrawals are implemented.",
            "returns": {
              "_0": "Whether withdrawals are paused."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setDepositManager(address)": {
            "notice": "Sets the `DepositManager` address to `_depositManager`."
          },
          "setNodeOperatorRegistry(address)": {
            "notice": "Sets the `NodeOperatorRegistry` address to `_NodeOperatorRegistry`."
          },
          "setSwETH(address)": {
            "notice": "Sets the `swETH` address to `_swETH`."
          },
          "setSwellTreasury(address)": {
            "notice": "Sets the `SwellTreasury` address to `_swellTreasury`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol": "IAccessControlManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol": {
        "keccak256": "0x10561da35ef938e5039a72588620ca6df9187cd930747d261f0ef1ef45a83d8d",
        "urls": [
          "bzz-raw://c04d422b0c64886344e45fd04001556fb800711e08d4068c9dff576f086024b3",
          "dweb:/ipfs/QmcPDVzFuP2FS8AkoYDyhMGrY6tdRdfMf5pj763s8J4vji"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/IDepositManager.sol": {
        "keccak256": "0x55d2a3297326c2e07bf64326fb185146b1fdb0edf9b848a70feea25cf576eff3",
        "urls": [
          "bzz-raw://d2028d72c1c5e920363fdbc19edf4098d24fcd78f30f560bd70f940421b3df46",
          "dweb:/ipfs/QmNvh5aP6N4FxvNVw1RBqTGou6LX27S6uDc5bFpy3K6WwV"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol": {
        "keccak256": "0x25c6dac581ce443f8ed3f7cb4c0e452a6161ed8f98c74bb28f47ed698d2c5a1f",
        "urls": [
          "bzz-raw://18ac4625aa1198b80639e09925f0f48733df4fe42d78e033b2810221adbfdcb8",
          "dweb:/ipfs/QmQnhokjGMFN3EjqvnMFetHJPVWKtPtScZQLyduuHRLQ5s"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/interfaces/IswETH.sol": {
        "keccak256": "0x6191d18854166fa8e9b0e32f18e8671f41026ddf4679377c48963c8c03837089",
        "urls": [
          "bzz-raw://f4d257d6f352aa712c152406178f1316a374ee685f51f24e182b99ed120ce328",
          "dweb:/ipfs/Qmbu1WP23aAaijW2LJFWVCzFst7hAbwnQ7U5mwY4oKas8r"
        ],
        "license": "UNLICENSED"
      },
      "out/NodeOperatorRegistry/contracts/vendors/IPoRAddresses.sol": {
        "keccak256": "0xb63361087cbd29ead80f4d07b0751c780632a09786301aae9a2229470d96fd39",
        "urls": [
          "bzz-raw://a107a9ed62725cf6171ba15756c85cb9320788bf1bfa3bb97eb2f670644b3479",
          "dweb:/ipfs/QmXaLN7EK6Vrxo3n2ZLLHa7XzMSaE4LzspNBWonJphZmUE"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "ast": {
    "absolutePath": "out/NodeOperatorRegistry/contracts/interfaces/IAccessControlManager.sol",
    "id": 3861,
    "exportedSymbols": {
      "IAccessControlEnumerableUpgradeable": [
        24
      ],
      "IAccessControlManager": [
        3860
      ],
      "IDepositManager": [
        3910
      ],
      "IERC20": [
        1365
      ],
      "INodeOperatorRegistry": [
        4222
      ],
      "IswETH": [
        4442
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7919:11",
    "nodes": [
      {
        "id": 3656,
        "nodeType": "PragmaDirective",
        "src": "39:23:11",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 3658,
        "nodeType": "ImportDirective",
        "src": "64:135:11",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3861,
        "sourceUnit": 25,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3657,
              "name": "IAccessControlEnumerableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24,
              "src": "72:35:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3660,
        "nodeType": "ImportDirective",
        "src": "200:70:11",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3861,
        "sourceUnit": 1366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3659,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1365,
              "src": "208:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3662,
        "nodeType": "ImportDirective",
        "src": "272:54:11",
        "nodes": [],
        "absolutePath": "out/NodeOperatorRegistry/contracts/interfaces/IDepositManager.sol",
        "file": "./IDepositManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3861,
        "sourceUnit": 3911,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3661,
              "name": "IDepositManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3910,
              "src": "280:15:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3664,
        "nodeType": "ImportDirective",
        "src": "327:36:11",
        "nodes": [],
        "absolutePath": "out/NodeOperatorRegistry/contracts/interfaces/IswETH.sol",
        "file": "./IswETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3861,
        "sourceUnit": 4443,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3663,
              "name": "IswETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4442,
              "src": "335:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3666,
        "nodeType": "ImportDirective",
        "src": "364:66:11",
        "nodes": [],
        "absolutePath": "out/NodeOperatorRegistry/contracts/interfaces/INodeOperatorRegistry.sol",
        "file": "./INodeOperatorRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3861,
        "sourceUnit": 4223,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3665,
              "name": "INodeOperatorRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4222,
              "src": "372:21:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3860,
        "nodeType": "ContractDefinition",
        "src": "641:7316:11",
        "nodes": [
          {
            "id": 3674,
            "nodeType": "StructDefinition",
            "src": "892:75:11",
            "nodes": [],
            "canonicalName": "IAccessControlManager.InitializeParams",
            "members": [
              {
                "constant": false,
                "id": 3671,
                "mutability": "mutable",
                "name": "admin",
                "nameLocation": "930:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 3674,
                "src": "922:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3670,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3673,
                "mutability": "mutable",
                "name": "swellTreasury",
                "nameLocation": "949:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 3674,
                "src": "941:21:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3672,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "941:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "InitializeParams",
            "nameLocation": "899:16:11",
            "scope": 3860,
            "visibility": "public"
          },
          {
            "id": 3677,
            "nodeType": "ErrorDefinition",
            "src": "1081:22:11",
            "nodes": [],
            "documentation": {
              "id": 3675,
              "nodeType": "StructuredDocumentation",
              "src": "997:81:11",
              "text": "@dev Error thrown when attempting to pause an already-paused boolean"
            },
            "errorSelector": "1785c681",
            "name": "AlreadyPaused",
            "nameLocation": "1087:13:11",
            "parameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:2:11"
            }
          },
          {
            "id": 3680,
            "nodeType": "ErrorDefinition",
            "src": "1195:24:11",
            "nodes": [],
            "documentation": {
              "id": 3678,
              "nodeType": "StructuredDocumentation",
              "src": "1107:85:11",
              "text": "@dev Error thrown when attempting to unpause an already-unpaused boolean"
            },
            "errorSelector": "98b904cd",
            "name": "AlreadyUnpaused",
            "nameLocation": "1201:15:11",
            "parameters": {
              "id": 3679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:11"
            }
          },
          {
            "id": 3687,
            "nodeType": "EventDefinition",
            "src": "1454:68:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3681,
              "nodeType": "StructuredDocumentation",
              "src": "1249:202:11",
              "text": "@dev Emitted when a new DepositManager contract address is set.\n@param newAddress The new DepositManager contract address.\n@param oldAddress The old DepositManager contract address."
            },
            "eventSelector": "791f08e8fa6583e9dc7bd2eaebe2ba10c8f09f013fde367fd8aaf2a6f02cf11d",
            "name": "UpdatedDepositManager",
            "nameLocation": "1460:21:11",
            "parameters": {
              "id": 3686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3683,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1490:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "1482:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "1510:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "1502:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:40:11"
            }
          },
          {
            "id": 3694,
            "nodeType": "EventDefinition",
            "src": "1749:74:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3688,
              "nodeType": "StructuredDocumentation",
              "src": "1526:220:11",
              "text": "@dev Emitted when a new NodeOperatorRegistry contract address is set.\n@param newAddress The new NodeOperatorRegistry contract address.\n@param oldAddress The old NodeOperatorRegistry contract address."
            },
            "eventSelector": "3b8f8c5425063a0cd645d2fd7a9dac5b63ab8bca0775960f6a29ec01a3ecabbc",
            "name": "UpdatedNodeOperatorRegistry",
            "nameLocation": "1755:27:11",
            "parameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3690,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1791:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3694,
                  "src": "1783:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3692,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "1811:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3694,
                  "src": "1803:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:40:11"
            }
          },
          {
            "id": 3701,
            "nodeType": "EventDefinition",
            "src": "2029:67:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3695,
              "nodeType": "StructuredDocumentation",
              "src": "1827:199:11",
              "text": "@dev Emitted when a new SwellTreasury contract address is set.\n@param newAddress The new SwellTreasury contract address.\n@param oldAddress The old SwellTreasury contract address."
            },
            "eventSelector": "bdbdf1d5bc05fbad2ec185c8095705a3a97a3a3523f881d8e0466478242bc0f4",
            "name": "UpdatedSwellTreasury",
            "nameLocation": "2035:20:11",
            "parameters": {
              "id": 3700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3697,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "2064:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "2056:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3699,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "2084:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "2076:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2055:40:11"
            }
          },
          {
            "id": 3708,
            "nodeType": "EventDefinition",
            "src": "2278:59:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3702,
              "nodeType": "StructuredDocumentation",
              "src": "2100:175:11",
              "text": "@dev Emitted when a new SwETH contract address is set.\n@param newAddress The new SwETH contract address.\n@param oldAddress The old SwETH contract address."
            },
            "eventSelector": "7b88a4b53e2d1291ab0d293b53c247b2c747fb147d41e49e612d6ace09391a69",
            "name": "UpdatedSwETH",
            "nameLocation": "2284:12:11",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3704,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "2305:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "2297:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3706,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "2325:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "2317:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2296:40:11"
            }
          },
          {
            "id": 3713,
            "nodeType": "EventDefinition",
            "src": "2474:45:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3709,
              "nodeType": "StructuredDocumentation",
              "src": "2341:130:11",
              "text": "@dev Emitted when core methods functionality is paused or unpaused.\n@param newPausedStatus The new paused status."
            },
            "eventSelector": "b6fedfc319d58f9c9ceb507ccbccfb001bdd80ed112a793baf7929bdd199dea9",
            "name": "CoreMethodsPause",
            "nameLocation": "2480:16:11",
            "parameters": {
              "id": 3712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPausedStatus",
                  "nameLocation": "2502:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3713,
                  "src": "2497:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2496:22:11"
            }
          },
          {
            "id": 3718,
            "nodeType": "EventDefinition",
            "src": "2655:44:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3714,
              "nodeType": "StructuredDocumentation",
              "src": "2523:129:11",
              "text": "@dev Emitted when bot methods functionality is paused or unpaused.\n@param newPausedStatus The new paused status."
            },
            "eventSelector": "73aa8db6bd5d14ba1e932da852630cc992c72b32400a50224189657e48118449",
            "name": "BotMethodsPause",
            "nameLocation": "2661:15:11",
            "parameters": {
              "id": 3717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3716,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPausedStatus",
                  "nameLocation": "2682:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3718,
                  "src": "2677:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3715,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2676:22:11"
            }
          },
          {
            "id": 3723,
            "nodeType": "EventDefinition",
            "src": "2840:49:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3719,
              "nodeType": "StructuredDocumentation",
              "src": "2703:134:11",
              "text": "@dev Emitted when operator methods functionality is paused or unpaused.\n@param newPausedStatus The new paused status."
            },
            "eventSelector": "af0739491557ad56a0a636896e371839505cee9edc77440ecaf5c004d5a1bce8",
            "name": "OperatorMethodsPause",
            "nameLocation": "2846:20:11",
            "parameters": {
              "id": 3722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3721,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPausedStatus",
                  "nameLocation": "2872:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3723,
                  "src": "2867:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3720,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2866:22:11"
            }
          },
          {
            "id": 3728,
            "nodeType": "EventDefinition",
            "src": "3025:45:11",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3724,
              "nodeType": "StructuredDocumentation",
              "src": "2893:129:11",
              "text": "@dev Emitted when withdrawals functionality is paused or unpaused.\n@param newPausedStatus The new paused status."
            },
            "eventSelector": "f58d2d1bfb990a10767ee866347abba793211460674ab22d76c90b7979f744b5",
            "name": "WithdrawalsPause",
            "nameLocation": "3031:16:11",
            "parameters": {
              "id": 3727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3726,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPausedStatus",
                  "nameLocation": "3053:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3728,
                  "src": "3048:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3725,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3048:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3047:22:11"
            }
          },
          {
            "id": 3736,
            "nodeType": "FunctionDefinition",
            "src": "3544:64:11",
            "nodes": [],
            "documentation": {
              "id": 3729,
              "nodeType": "StructuredDocumentation",
              "src": "3152:389:11",
              "text": " @dev Pass-through method to call the _checkRole method on the inherited access control contract. This method is to be used by external contracts that are using this centralised access control manager, this ensures that if the check fails it reverts with the correct access control error message\n @param role The role to check\n @param account The account to check for"
            },
            "functionSelector": "12d9a6ad",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkRole",
            "nameLocation": "3553:9:11",
            "parameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "3571:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "3563:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3733,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3585:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "3577:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:31:11"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3607:0:11"
            },
            "scope": 3860,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3743,
            "nodeType": "FunctionDefinition",
            "src": "3829:42:11",
            "nodes": [],
            "documentation": {
              "id": 3737,
              "nodeType": "StructuredDocumentation",
              "src": "3639:187:11",
              "text": " @notice Sets the `swETH` address to `_swETH`.\n @dev This function is only callable by the `PLATFORM_ADMIN` role.\n @param _swETH The address of the `swETH` contract."
            },
            "functionSelector": "083ce638",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwETH",
            "nameLocation": "3838:8:11",
            "parameters": {
              "id": 3741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3740,
                  "mutability": "mutable",
                  "name": "_swETH",
                  "nameLocation": "3854:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "3847:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IswETH_$4442",
                    "typeString": "contract IswETH"
                  },
                  "typeName": {
                    "id": 3739,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3738,
                      "name": "IswETH",
                      "nameLocations": [
                        "3847:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4442,
                      "src": "3847:6:11"
                    },
                    "referencedDeclaration": 4442,
                    "src": "3847:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IswETH_$4442",
                      "typeString": "contract IswETH"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3846:15:11"
            },
            "returnParameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3870:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3750,
            "nodeType": "FunctionDefinition",
            "src": "4101:69:11",
            "nodes": [],
            "documentation": {
              "id": 3744,
              "nodeType": "StructuredDocumentation",
              "src": "3875:223:11",
              "text": " @notice Sets the `DepositManager` address to `_depositManager`.\n @dev This function is only callable by the `PLATFORM_ADMIN` role.\n @param _depositManager The address of the `DepositManager` contract."
            },
            "functionSelector": "228d71a9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDepositManager",
            "nameLocation": "4110:17:11",
            "parameters": {
              "id": 3748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3747,
                  "mutability": "mutable",
                  "name": "_depositManager",
                  "nameLocation": "4144:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "4128:31:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDepositManager_$3910",
                    "typeString": "contract IDepositManager"
                  },
                  "typeName": {
                    "id": 3746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3745,
                      "name": "IDepositManager",
                      "nameLocations": [
                        "4128:15:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3910,
                      "src": "4128:15:11"
                    },
                    "referencedDeclaration": 3910,
                    "src": "4128:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepositManager_$3910",
                      "typeString": "contract IDepositManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4127:33:11"
            },
            "returnParameters": {
              "id": 3749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4169:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3757,
            "nodeType": "FunctionDefinition",
            "src": "4424:95:11",
            "nodes": [],
            "documentation": {
              "id": 3751,
              "nodeType": "StructuredDocumentation",
              "src": "4174:247:11",
              "text": " @notice Sets the `NodeOperatorRegistry` address to `_NodeOperatorRegistry`.\n @dev This function is only callable by the `PLATFORM_ADMIN` role.\n @param _NodeOperatorRegistry The address of the `NodeOperatorRegistry` contract."
            },
            "functionSelector": "d3557bd0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNodeOperatorRegistry",
            "nameLocation": "4433:23:11",
            "parameters": {
              "id": 3755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3754,
                  "mutability": "mutable",
                  "name": "_NodeOperatorRegistry",
                  "nameLocation": "4484:21:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3757,
                  "src": "4462:43:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INodeOperatorRegistry_$4222",
                    "typeString": "contract INodeOperatorRegistry"
                  },
                  "typeName": {
                    "id": 3753,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3752,
                      "name": "INodeOperatorRegistry",
                      "nameLocations": [
                        "4462:21:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4222,
                      "src": "4462:21:11"
                    },
                    "referencedDeclaration": 4222,
                    "src": "4462:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INodeOperatorRegistry_$4222",
                      "typeString": "contract INodeOperatorRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4456:53:11"
            },
            "returnParameters": {
              "id": 3756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4518:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3763,
            "nodeType": "FunctionDefinition",
            "src": "4749:59:11",
            "nodes": [],
            "documentation": {
              "id": 3758,
              "nodeType": "StructuredDocumentation",
              "src": "4523:223:11",
              "text": " @notice Sets the `SwellTreasury` address to `_swellTreasury`.\n @dev This function is only callable by the `PLATFORM_ADMIN` role.\n @param _swellTreasury The new address of the `SwellTreasury` contract."
            },
            "functionSelector": "715f666b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwellTreasury",
            "nameLocation": "4758:16:11",
            "parameters": {
              "id": 3761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3760,
                  "mutability": "mutable",
                  "name": "_swellTreasury",
                  "nameLocation": "4783:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3763,
                  "src": "4775:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4774:24:11"
            },
            "returnParameters": {
              "id": 3762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4807:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3769,
            "nodeType": "FunctionDefinition",
            "src": "4959:58:11",
            "nodes": [],
            "documentation": {
              "id": 3764,
              "nodeType": "StructuredDocumentation",
              "src": "4839:117:11",
              "text": "@dev Returns the PLATFORM_ADMIN role.\n@return The bytes32 representation of the PLATFORM_ADMIN role."
            },
            "functionSelector": "c1d0a7d8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "PLATFORM_ADMIN",
            "nameLocation": "4968:14:11",
            "parameters": {
              "id": 3765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4982:2:11"
            },
            "returnParameters": {
              "id": 3768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "5008:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3766,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5008:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5007:9:11"
            },
            "scope": 3860,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3776,
            "nodeType": "FunctionDefinition",
            "src": "5109:43:11",
            "nodes": [],
            "documentation": {
              "id": 3770,
              "nodeType": "StructuredDocumentation",
              "src": "5021:85:11",
              "text": "@dev Returns the Swell ETH contract.\n@return The Swell ETH contract."
            },
            "functionSelector": "18a66953",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swETH",
            "nameLocation": "5118:5:11",
            "parameters": {
              "id": 3771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5123:2:11"
            },
            "returnParameters": {
              "id": 3775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3776,
                  "src": "5144:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IswETH_$4442",
                    "typeString": "contract IswETH"
                  },
                  "typeName": {
                    "id": 3773,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3772,
                      "name": "IswETH",
                      "nameLocations": [
                        "5144:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4442,
                      "src": "5144:6:11"
                    },
                    "referencedDeclaration": 4442,
                    "src": "5144:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IswETH_$4442",
                      "typeString": "contract IswETH"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5143:8:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3782,
            "nodeType": "FunctionDefinition",
            "src": "5284:52:11",
            "nodes": [],
            "documentation": {
              "id": 3777,
              "nodeType": "StructuredDocumentation",
              "src": "5156:125:11",
              "text": "@dev Returns the address of the Swell Treasury contract.\n@return The address of the Swell Treasury contract."
            },
            "functionSelector": "96e9da55",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SwellTreasury",
            "nameLocation": "5293:13:11",
            "parameters": {
              "id": 3778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5306:2:11"
            },
            "returnParameters": {
              "id": 3781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3780,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3782,
                  "src": "5327:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5327:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5326:9:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3789,
            "nodeType": "FunctionDefinition",
            "src": "5440:61:11",
            "nodes": [],
            "documentation": {
              "id": 3783,
              "nodeType": "StructuredDocumentation",
              "src": "5340:97:11",
              "text": "@dev Returns the Deposit Manager contract.\n@return The Deposit Manager contract."
            },
            "functionSelector": "f712312c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "DepositManager",
            "nameLocation": "5449:14:11",
            "parameters": {
              "id": 3784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5463:2:11"
            },
            "returnParameters": {
              "id": 3788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3787,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3789,
                  "src": "5484:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDepositManager_$3910",
                    "typeString": "contract IDepositManager"
                  },
                  "typeName": {
                    "id": 3786,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3785,
                      "name": "IDepositManager",
                      "nameLocations": [
                        "5484:15:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3910,
                      "src": "5484:15:11"
                    },
                    "referencedDeclaration": 3910,
                    "src": "5484:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepositManager_$3910",
                      "typeString": "contract IDepositManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5483:17:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3796,
            "nodeType": "FunctionDefinition",
            "src": "5619:73:11",
            "nodes": [],
            "documentation": {
              "id": 3790,
              "nodeType": "StructuredDocumentation",
              "src": "5505:111:11",
              "text": "@dev Returns the Node Operator Registry contract.\n@return The Node Operator Registry contract."
            },
            "functionSelector": "9ffaaa3b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "NodeOperatorRegistry",
            "nameLocation": "5628:20:11",
            "parameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5648:2:11"
            },
            "returnParameters": {
              "id": 3795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3796,
                  "src": "5669:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INodeOperatorRegistry_$4222",
                    "typeString": "contract INodeOperatorRegistry"
                  },
                  "typeName": {
                    "id": 3793,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3792,
                      "name": "INodeOperatorRegistry",
                      "nameLocations": [
                        "5669:21:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4222,
                      "src": "5669:21:11"
                    },
                    "referencedDeclaration": 4222,
                    "src": "5669:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INodeOperatorRegistry_$4222",
                      "typeString": "contract INodeOperatorRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5668:23:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3802,
            "nodeType": "FunctionDefinition",
            "src": "5812:53:11",
            "nodes": [],
            "documentation": {
              "id": 3797,
              "nodeType": "StructuredDocumentation",
              "src": "5696:113:11",
              "text": "@dev Returns true if core methods are currently paused.\n@return Whether core methods are paused."
            },
            "functionSelector": "a3e7dfd3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "coreMethodsPaused",
            "nameLocation": "5821:17:11",
            "parameters": {
              "id": 3798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5838:2:11"
            },
            "returnParameters": {
              "id": 3801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3802,
                  "src": "5859:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5859:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5858:6:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3808,
            "nodeType": "FunctionDefinition",
            "src": "5983:52:11",
            "nodes": [],
            "documentation": {
              "id": 3803,
              "nodeType": "StructuredDocumentation",
              "src": "5869:111:11",
              "text": "@dev Returns true if bot methods are currently paused.\n@return Whether bot methods are paused."
            },
            "functionSelector": "d19a8502",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "botMethodsPaused",
            "nameLocation": "5992:16:11",
            "parameters": {
              "id": 3804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6008:2:11"
            },
            "returnParameters": {
              "id": 3807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3806,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3808,
                  "src": "6029:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3805,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6029:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6028:6:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3814,
            "nodeType": "FunctionDefinition",
            "src": "6163:57:11",
            "nodes": [],
            "documentation": {
              "id": 3809,
              "nodeType": "StructuredDocumentation",
              "src": "6039:121:11",
              "text": "@dev Returns true if operator methods are currently paused.\n@return Whether operator methods are paused."
            },
            "functionSelector": "5a8ee785",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorMethodsPaused",
            "nameLocation": "6172:21:11",
            "parameters": {
              "id": 3810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6193:2:11"
            },
            "returnParameters": {
              "id": 3813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3814,
                  "src": "6214:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6214:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6213:6:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3820,
            "nodeType": "FunctionDefinition",
            "src": "6492:53:11",
            "nodes": [],
            "documentation": {
              "id": 3815,
              "nodeType": "StructuredDocumentation",
              "src": "6224:265:11",
              "text": "@dev Returns true if withdrawals are currently paused.\n@dev ! Note that this is completely unused in the current implementation and is a placeholder that will be used once the withdrawals are implemented.\n@return Whether withdrawals are paused."
            },
            "functionSelector": "e9f2838e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalsPaused",
            "nameLocation": "6501:17:11",
            "parameters": {
              "id": 3816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6518:2:11"
            },
            "returnParameters": {
              "id": 3819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3820,
                  "src": "6539:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3817,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6539:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6538:6:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3824,
            "nodeType": "FunctionDefinition",
            "src": "6689:37:11",
            "nodes": [],
            "documentation": {
              "id": 3821,
              "nodeType": "StructuredDocumentation",
              "src": "6585:101:11",
              "text": "@dev Pauses the core methods of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "d63fd2dc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseCoreMethods",
            "nameLocation": "6698:16:11",
            "parameters": {
              "id": 3822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6714:2:11"
            },
            "returnParameters": {
              "id": 3823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6725:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3828,
            "nodeType": "FunctionDefinition",
            "src": "6836:39:11",
            "nodes": [],
            "documentation": {
              "id": 3825,
              "nodeType": "StructuredDocumentation",
              "src": "6730:103:11",
              "text": "@dev Unpauses the core methods of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "222b4717",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unpauseCoreMethods",
            "nameLocation": "6845:18:11",
            "parameters": {
              "id": 3826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6863:2:11"
            },
            "returnParameters": {
              "id": 3827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6874:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3832,
            "nodeType": "FunctionDefinition",
            "src": "6968:36:11",
            "nodes": [],
            "documentation": {
              "id": 3829,
              "nodeType": "StructuredDocumentation",
              "src": "6879:86:11",
              "text": "@dev Pauses the bot specific methods, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "6dbf7ce7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseBotMethods",
            "nameLocation": "6977:15:11",
            "parameters": {
              "id": 3830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:2:11"
            },
            "returnParameters": {
              "id": 3831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7003:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3836,
            "nodeType": "FunctionDefinition",
            "src": "7099:38:11",
            "nodes": [],
            "documentation": {
              "id": 3833,
              "nodeType": "StructuredDocumentation",
              "src": "7008:88:11",
              "text": "@dev Unpauses the bot specific methods, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "ce202043",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unpauseBotMethods",
            "nameLocation": "7108:17:11",
            "parameters": {
              "id": 3834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7125:2:11"
            },
            "returnParameters": {
              "id": 3835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7136:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3840,
            "nodeType": "FunctionDefinition",
            "src": "7254:41:11",
            "nodes": [],
            "documentation": {
              "id": 3837,
              "nodeType": "StructuredDocumentation",
              "src": "7141:110:11",
              "text": "@dev Pauses the operator methods in the NO registry contract, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "0f318c8b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseOperatorMethods",
            "nameLocation": "7263:20:11",
            "parameters": {
              "id": 3838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7283:2:11"
            },
            "returnParameters": {
              "id": 3839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7294:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3844,
            "nodeType": "FunctionDefinition",
            "src": "7414:43:11",
            "nodes": [],
            "documentation": {
              "id": 3841,
              "nodeType": "StructuredDocumentation",
              "src": "7299:112:11",
              "text": "@dev Unpauses the operator methods in the NO registry contract, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "562e9a0a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unpauseOperatorMethods",
            "nameLocation": "7423:22:11",
            "parameters": {
              "id": 3842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7445:2:11"
            },
            "returnParameters": {
              "id": 3843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7456:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3848,
            "nodeType": "FunctionDefinition",
            "src": "7564:37:11",
            "nodes": [],
            "documentation": {
              "id": 3845,
              "nodeType": "StructuredDocumentation",
              "src": "7461:100:11",
              "text": "@dev Pauses the withdrawals of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "56bb54a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseWithdrawals",
            "nameLocation": "7573:16:11",
            "parameters": {
              "id": 3846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7589:2:11"
            },
            "returnParameters": {
              "id": 3847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7600:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3852,
            "nodeType": "FunctionDefinition",
            "src": "7710:39:11",
            "nodes": [],
            "documentation": {
              "id": 3849,
              "nodeType": "StructuredDocumentation",
              "src": "7605:102:11",
              "text": "@dev Unpauses the withdrawals of the Swell ecosystem, only callable by the PLATFORM_ADMIN"
            },
            "functionSelector": "e4c4be58",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unpauseWithdrawals",
            "nameLocation": "7719:18:11",
            "parameters": {
              "id": 3850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7737:2:11"
            },
            "returnParameters": {
              "id": 3851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7748:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3859,
            "nodeType": "FunctionDefinition",
            "src": "7908:47:11",
            "nodes": [],
            "documentation": {
              "id": 3853,
              "nodeType": "StructuredDocumentation",
              "src": "7753:152:11",
              "text": " @dev This method withdraws contract's _token balance to a platform admin\n @param _token The ERC20 token to withdraw from the contract"
            },
            "functionSelector": "f4f3b200",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawERC20",
            "nameLocation": "7917:13:11",
            "parameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3856,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7938:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3859,
                  "src": "7931:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1365",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3855,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3854,
                      "name": "IERC20",
                      "nameLocations": [
                        "7931:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1365,
                      "src": "7931:6:11"
                    },
                    "referencedDeclaration": 1365,
                    "src": "7931:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1365",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7930:15:11"
            },
            "returnParameters": {
              "id": 3858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7954:0:11"
            },
            "scope": 3860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3668,
              "name": "IAccessControlEnumerableUpgradeable",
              "nameLocations": [
                "676:35:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24,
              "src": "676:35:11"
            },
            "id": 3669,
            "nodeType": "InheritanceSpecifier",
            "src": "676:35:11"
          }
        ],
        "canonicalName": "IAccessControlManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3667,
          "nodeType": "StructuredDocumentation",
          "src": "432:208:11",
          "text": "@title IAccessControlManager\n@author https://github.com/max-taylor \n@dev The interface for the Access Control Manager, which manages roles and permissions for contracts within the Swell ecosystem"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          3860,
          24,
          97
        ],
        "name": "IAccessControlManager",
        "nameLocation": "651:21:11",
        "scope": 3861,
        "usedErrors": [
          3677,
          3680
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 11
}